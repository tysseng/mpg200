;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 03.03.2014 19:48:37
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF007EFE9  	GOTO        4050
_interrupt:
;frequencycounter.c,196 :: 		void interrupt(void) {
0x0008	0xF015C000  	MOVFF       R0, 21
;frequencycounter.c,199 :: 		if (PIR1.CCP1IF){
0x000C	0xF016CFE1  	MOVFF       FSR1L, 22
0x0010	0xF017CFE2  	MOVFF       FSR1H, 23
0x0014	0xA49E      	BTFSS       PIR1, 2 
0x0016	0xD00E      	BRA         L_interrupt7
;frequencycounter.c,205 :: 		MOVF        CCPR1H+0, 0
0x0018	0x50BF      	MOVF        CCPR1H, 0, 0
;frequencycounter.c,206 :: 		MOVWF       _capturedData+1
0x001A	0x6F7D      	MOVWF       _capturedData+1, 1
;frequencycounter.c,207 :: 		MOVF        CCPR1L+0, 0
0x001C	0x50BE      	MOVF        CCPR1L, 0, 0
;frequencycounter.c,208 :: 		MOVWF       _capturedData+0
0x001E	0x6F7C      	MOVWF       _capturedData, 1
;frequencycounter.c,209 :: 		BCF         T1CON+0, 0
0x0020	0x90CD      	BCF         T1CON, 0, 0
;frequencycounter.c,210 :: 		CLRF        TMR1H+0
0x0022	0x6ACF      	CLRF        TMR1H, 0
;frequencycounter.c,211 :: 		CLRF        TMR1L+0
0x0024	0x6ACE      	CLRF        TMR1L, 0
;frequencycounter.c,212 :: 		BSF         T1CON+0, 5
0x0026	0x8ACD      	BSF         T1CON, 5, 0
;frequencycounter.c,213 :: 		BCF         T1CON+0, 4
0x0028	0x98CD      	BCF         T1CON, 4, 0
;frequencycounter.c,214 :: 		BCF         PIR1+0, 0
0x002A	0x909E      	BCF         PIR1, 0, 0
;frequencycounter.c,215 :: 		BSF         T1CON+0, 0
0x002C	0x80CD      	BSF         T1CON, 0, 0
;frequencycounter.c,233 :: 		storeInput() ;                   // copy the captured data to the array of samples.
0x002E	0xF004ECD6  	CALL        _storeInput, 0
;frequencycounter.c,234 :: 		PIR1.CCP1IF = 0 ;                // clear capture flag after grabbing data
0x0032	0x949E      	BCF         PIR1, 2 
;frequencycounter.c,235 :: 		}
L_interrupt7:
;frequencycounter.c,236 :: 		}
L_end_interrupt:
L__interrupt19:
0x0034	0xF000C015  	MOVFF       21, R0
0x0038	0xFFE1C016  	MOVFF       22, FSR1L
0x003C	0xFFE2C017  	MOVFF       23, FSR1H
0x0040	0x0011      	RETFIE      1
; end of _interrupt
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0042	0x0E24      	MOVLW       36
0x0044	0x6E0C      	MOVWF       R12, 0
0x0046	0x0EB5      	MOVLW       181
0x0048	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x004A	0x2E0D      	DECFSZ      R13, 1, 0
0x004C	0xD7FE      	BRA         L_Delay_5500us5
0x004E	0x2E0C      	DECFSZ      R12, 1, 0
0x0050	0xD7FC      	BRA         L_Delay_5500us5
0x0052	0x0000      	NOP
0x0054	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0056	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0058	0x0000      	NOP
0x005A	0x0000      	NOP
0x005C	0x0000      	NOP
0x005E	0x0000      	NOP
0x0060	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0062	0x0012      	RETURN      0
; end of _Delay_1us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0064	0x0E53      	MOVLW       83
0x0066	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x0068	0x2E0D      	DECFSZ      R13, 1, 0
0x006A	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x006C	0x0012      	RETURN      0
; end of _Delay_50us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x006E	0x0102      	MOVLB       2
0x0070	0xBF78      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0072	0xD002      	BRA         L__Lcd_Cmd21
0x0074	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0076	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0078	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x007A	0xBD78      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x007C	0xD002      	BRA         L__Lcd_Cmd23
0x007E	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0080	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0082	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0084	0xBB78      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x0086	0xD002      	BRA         L__Lcd_Cmd25
0x0088	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x008A	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x008C	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x008E	0xB978      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x0090	0xD002      	BRA         L__Lcd_Cmd27
0x0092	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0094	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0096	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0098	0x0100      	MOVLB       0
0x009A	0xB17E      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x009C	0xD002      	BRA         L__Lcd_Cmd29
0x009E	0x8481      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00A0	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x00A2	0x9481      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x00A4	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x00A6	0xDFD8      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x00A8	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x00AA	0x0102      	MOVLB       2
0x00AC	0xB778      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x00AE	0xD002      	BRA         L__Lcd_Cmd31
0x00B0	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x00B2	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x00B4	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x00B6	0xB578      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x00B8	0xD002      	BRA         L__Lcd_Cmd33
0x00BA	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00BC	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00BE	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00C0	0xB378      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x00C2	0xD002      	BRA         L__Lcd_Cmd35
0x00C4	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00C6	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00C8	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00CA	0xB178      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x00CC	0xD002      	BRA         L__Lcd_Cmd37
0x00CE	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00D0	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00D2	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00D4	0x0100      	MOVLB       0
0x00D6	0xB17E      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x00D8	0xD002      	BRA         L__Lcd_Cmd39
0x00DA	0x8481      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00DC	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00DE	0x9481      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00E0	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00E2	0xDFBA      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00E4	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00E6	0xA17E      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x00E8	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00EA	0xDFAB      	RCALL       _Delay_5500us
0x00EC	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00EE	0xDFBA      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00F0	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x00F2	0x0100      	MOVLB       0
0x00F4	0x917E      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,53 :: 		
0x00F6	0xF278C277  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x00FA	0xDFB9      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x00FC	0x817E      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x00FE	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x0100	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x0102	0x0E80      	MOVLW       128
0x0104	0x0102      	MOVLB       2
0x0106	0x6F72      	MOVWF       FARG_Lcd_Out_row, 1
0x0108	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x010A	0x0EC0      	MOVLW       192
0x010C	0x6F72      	MOVWF       FARG_Lcd_Out_row, 1
0x010E	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0110	0x0E94      	MOVLW       148
0x0112	0x6F72      	MOVWF       FARG_Lcd_Out_row, 1
0x0114	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0116	0x0ED4      	MOVLW       212
0x0118	0x6F72      	MOVWF       FARG_Lcd_Out_row, 1
0x011A	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x011C	0x0E80      	MOVLW       128
0x011E	0x6F72      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x0120	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x0122	0x0102      	MOVLB       2
0x0124	0x5172      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0126	0x0A01      	XORLW       1
0x0128	0xE0EC      	BZ          L_Lcd_Out13
0x012A	0x5172      	MOVF        FARG_Lcd_Out_row, 0, 1
0x012C	0x0A02      	XORLW       2
0x012E	0xE0ED      	BZ          L_Lcd_Out14
0x0130	0x5172      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0132	0x0A03      	XORLW       3
0x0134	0xE0ED      	BZ          L_Lcd_Out15
0x0136	0x5172      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0138	0x0A04      	XORLW       4
0x013A	0xE0ED      	BZ          L_Lcd_Out16
0x013C	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x013E	0x0573      	DECF        FARG_Lcd_Out_column, 0, 1
0x0140	0x6E00      	MOVWF       R0 
0x0142	0x5172      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0144	0x2600      	ADDWF       R0, 1 
0x0146	0xF272C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x014A	0xF278C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x014E	0xDF8F      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0150	0x917E      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,198 :: 		
0x0152	0x0102      	MOVLB       2
0x0154	0x6B76      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0156	0x5176      	MOVF        Lcd_Out_i_L0, 0, 1
0x0158	0x2574      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x015A	0x6EE9      	MOVWF       FSR0L 
0x015C	0x0E00      	MOVLW       0
0x015E	0x2175      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0160	0x6EEA      	MOVWF       FSR0H 
0x0162	0x52EE      	MOVF        POSTINC0, 1 
0x0164	0xE00C      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0166	0x5176      	MOVF        Lcd_Out_i_L0, 0, 1
0x0168	0x2574      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x016A	0x6EE9      	MOVWF       FSR0L 
0x016C	0x0E00      	MOVLW       0
0x016E	0x2175      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0170	0x6EEA      	MOVWF       FSR0H 
0x0172	0xF277CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0176	0xDFBD      	RCALL       _Lcd_Chr_CP
0x0178	0x0102      	MOVLB       2
0x017A	0x2B76      	INCF        Lcd_Out_i_L0, 1, 1
0x017C	0xD7EC      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x017E	0x0100      	MOVLB       0
0x0180	0x817E      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0182	0x0012      	RETURN      0
; end of _Lcd_Out
_Lcd_Chr:
;__Lib_Lcd.c,65 :: 		
;__Lib_Lcd.c,66 :: 		
0x0184	0xD010      	BRA         L_Lcd_Chr4
;__Lib_Lcd.c,67 :: 		
L_Lcd_Chr6:
0x0186	0x0E80      	MOVLW       128
0x0188	0x0102      	MOVLB       2
0x018A	0x6F72      	MOVWF       FARG_Lcd_Chr_row, 1
0x018C	0xD01A      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,68 :: 		
L_Lcd_Chr7:
0x018E	0x0EC0      	MOVLW       192
0x0190	0x6F72      	MOVWF       FARG_Lcd_Chr_row, 1
0x0192	0xD017      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,69 :: 		
L_Lcd_Chr8:
0x0194	0x0E94      	MOVLW       148
0x0196	0x6F72      	MOVWF       FARG_Lcd_Chr_row, 1
0x0198	0xD014      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,70 :: 		
L_Lcd_Chr9:
0x019A	0x0ED4      	MOVLW       212
0x019C	0x6F72      	MOVWF       FARG_Lcd_Chr_row, 1
0x019E	0xD011      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,71 :: 		
L_Lcd_Chr10:
0x01A0	0x0E80      	MOVLW       128
0x01A2	0x6F72      	MOVWF       FARG_Lcd_Chr_row, 1
;__Lib_Lcd.c,72 :: 		
0x01A4	0xD00E      	BRA         L_Lcd_Chr5
L_Lcd_Chr4:
0x01A6	0x0102      	MOVLB       2
0x01A8	0x5172      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x01AA	0x0A01      	XORLW       1
0x01AC	0xE0EC      	BZ          L_Lcd_Chr6
0x01AE	0x5172      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x01B0	0x0A02      	XORLW       2
0x01B2	0xE0ED      	BZ          L_Lcd_Chr7
0x01B4	0x5172      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x01B6	0x0A03      	XORLW       3
0x01B8	0xE0ED      	BZ          L_Lcd_Chr8
0x01BA	0x5172      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x01BC	0x0A04      	XORLW       4
0x01BE	0xE0ED      	BZ          L_Lcd_Chr9
0x01C0	0xD7EF      	BRA         L_Lcd_Chr10
L_Lcd_Chr5:
;__Lib_Lcd.c,74 :: 		
0x01C2	0x0573      	DECF        FARG_Lcd_Chr_column, 0, 1
0x01C4	0x6E00      	MOVWF       R0 
0x01C6	0x5172      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x01C8	0x2600      	ADDWF       R0, 1 
0x01CA	0xF272C000  	MOVFF       R0, FARG_Lcd_Chr_row
;__Lib_Lcd.c,76 :: 		
0x01CE	0x0100      	MOVLB       0
0x01D0	0x817E      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,77 :: 		
0x01D2	0xF278C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x01D6	0xDF4B      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,79 :: 		
0x01D8	0x917E      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,80 :: 		
0x01DA	0xF278C274  	MOVFF       FARG_Lcd_Chr_out_char, FARG_Lcd_Cmd_out_char
0x01DE	0xDF47      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,81 :: 		
0x01E0	0x817E      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,82 :: 		
L_end_Lcd_Chr:
0x01E2	0x0012      	RETURN      0
; end of _Lcd_Chr
_Div_8x8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x01E4	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x01E6	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x01E8	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x01EA	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x01EC	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x01EE	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x01F0	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x01F2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x01F4	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x01F6	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x01F8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x01FA	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x01FC	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x01FE	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8x8_U:
0x0200	0x0012      	RETURN      0
; end of _Div_8x8_U
_Div_32x32_U:
;__Lib_Math.c,1162 :: 		
;__Lib_Math.c,1173 :: 		
0x0202	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1174 :: 		
0x0204	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1175 :: 		
0x0206	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1176 :: 		
0x0208	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1178 :: 		
0x020A	0x6A0E      	CLRF        R14, 0
;__Lib_Math.c,1180 :: 		
0x020C	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1181 :: 		
0x020E	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1182 :: 		
0x0210	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1183 :: 		
0x0212	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1184 :: 		
0x0214	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1185 :: 		
0x0216	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1186 :: 		
0x0218	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1187 :: 		
0x021A	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1188 :: 		
0x021C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1189 :: 		
0x021E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1190 :: 		
0x0220	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1191 :: 		
0x0222	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1192 :: 		
0x0224	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1193 :: 		
0x0226	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1194 :: 		
0x0228	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1195 :: 		
0x022A	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1197 :: 		
0x022C	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1198 :: 		
0x022E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1199 :: 		
0x0230	0x0E01      	MOVLW       1
;__Lib_Math.c,1200 :: 		
0x0232	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1201 :: 		
0x0234	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1203 :: 		
0x0236	0x0E07      	MOVLW       7
;__Lib_Math.c,1204 :: 		
0x0238	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1206 :: 		
LOOPU3232A:
;__Lib_Math.c,1207 :: 		
0x023A	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1208 :: 		
0x023C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1209 :: 		
0x023E	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1210 :: 		
0x0240	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1211 :: 		
0x0242	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1212 :: 		
0x0244	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1213 :: 		
0x0246	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1214 :: 		
0x0248	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1215 :: 		
0x024A	0xD012      	BRA         UADD22LA
;__Lib_Math.c,1217 :: 		
0x024C	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1218 :: 		
0x024E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1219 :: 		
0x0250	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1220 :: 		
0x0252	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1221 :: 		
0x0254	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1222 :: 		
0x0256	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1223 :: 		
0x0258	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1224 :: 		
0x025A	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1225 :: 		
0x025C	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1226 :: 		
0x025E	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1227 :: 		
0x0260	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1228 :: 		
0x0262	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1229 :: 		
0x0264	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1230 :: 		
0x0266	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1231 :: 		
0x0268	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1232 :: 		
0x026A	0x0E01      	MOVLW       1
;__Lib_Math.c,1233 :: 		
0x026C	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1234 :: 		
0x026E	0xD011      	BRA         UOK22LA
;__Lib_Math.c,1236 :: 		
UADD22LA:
;__Lib_Math.c,1237 :: 		
0x0270	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1238 :: 		
0x0272	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1239 :: 		
0x0274	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1240 :: 		
0x0276	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1241 :: 		
0x0278	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1242 :: 		
0x027A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1243 :: 		
0x027C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1244 :: 		
0x027E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1245 :: 		
0x0280	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1246 :: 		
0x0282	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1247 :: 		
0x0284	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1248 :: 		
0x0286	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1249 :: 		
0x0288	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1250 :: 		
0x028A	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1251 :: 		
0x028C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1252 :: 		
0x028E	0x0E01      	MOVLW       1
;__Lib_Math.c,1253 :: 		
0x0290	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1255 :: 		
UOK22LA:
;__Lib_Math.c,1256 :: 		
0x0292	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1258 :: 		
0x0294	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1259 :: 		
0x0296	0xD7D1      	BRA         LOOPU3232A
;__Lib_Math.c,1261 :: 		
0x0298	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1262 :: 		
0x029A	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1263 :: 		
0x029C	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1264 :: 		
0x029E	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1265 :: 		
0x02A0	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1266 :: 		
0x02A2	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1267 :: 		
0x02A4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1268 :: 		
0x02A6	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1269 :: 		
0x02A8	0xD012      	BRA         UADD22L8
;__Lib_Math.c,1271 :: 		
0x02AA	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1272 :: 		
0x02AC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1273 :: 		
0x02AE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1274 :: 		
0x02B0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1275 :: 		
0x02B2	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1276 :: 		
0x02B4	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1277 :: 		
0x02B6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1278 :: 		
0x02B8	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1279 :: 		
0x02BA	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1280 :: 		
0x02BC	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1281 :: 		
0x02BE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1282 :: 		
0x02C0	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1283 :: 		
0x02C2	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1284 :: 		
0x02C4	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1285 :: 		
0x02C6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1286 :: 		
0x02C8	0x0E01      	MOVLW       1
;__Lib_Math.c,1287 :: 		
0x02CA	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1288 :: 		
0x02CC	0xD011      	BRA         UOK22L8
;__Lib_Math.c,1290 :: 		
UADD22L8:
;__Lib_Math.c,1291 :: 		
0x02CE	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1292 :: 		
0x02D0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1293 :: 		
0x02D2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1294 :: 		
0x02D4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1295 :: 		
0x02D6	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1296 :: 		
0x02D8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1297 :: 		
0x02DA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1298 :: 		
0x02DC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1299 :: 		
0x02DE	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1300 :: 		
0x02E0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1301 :: 		
0x02E2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1302 :: 		
0x02E4	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1303 :: 		
0x02E6	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1304 :: 		
0x02E8	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1305 :: 		
0x02EA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1306 :: 		
0x02EC	0x0E01      	MOVLW       1
;__Lib_Math.c,1307 :: 		
0x02EE	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1309 :: 		
UOK22L8:
;__Lib_Math.c,1310 :: 		
0x02F0	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1312 :: 		
0x02F2	0x0E07      	MOVLW       7
;__Lib_Math.c,1313 :: 		
0x02F4	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1315 :: 		
LOOPU3232B:
;__Lib_Math.c,1316 :: 		
0x02F6	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1317 :: 		
0x02F8	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1318 :: 		
0x02FA	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1319 :: 		
0x02FC	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1320 :: 		
0x02FE	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1321 :: 		
0x0300	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1322 :: 		
0x0302	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1323 :: 		
0x0304	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1324 :: 		
0x0306	0xD012      	BRA         UADD22LB
;__Lib_Math.c,1326 :: 		
0x0308	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1327 :: 		
0x030A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1328 :: 		
0x030C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1329 :: 		
0x030E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1330 :: 		
0x0310	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1331 :: 		
0x0312	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1332 :: 		
0x0314	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1333 :: 		
0x0316	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1334 :: 		
0x0318	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1335 :: 		
0x031A	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1336 :: 		
0x031C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1337 :: 		
0x031E	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1338 :: 		
0x0320	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1339 :: 		
0x0322	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1340 :: 		
0x0324	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1341 :: 		
0x0326	0x0E01      	MOVLW       1
;__Lib_Math.c,1342 :: 		
0x0328	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1343 :: 		
0x032A	0xD011      	BRA         UOK22LB
;__Lib_Math.c,1345 :: 		
UADD22LB:
;__Lib_Math.c,1346 :: 		
0x032C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1347 :: 		
0x032E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1348 :: 		
0x0330	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1349 :: 		
0x0332	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1350 :: 		
0x0334	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1351 :: 		
0x0336	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1352 :: 		
0x0338	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1353 :: 		
0x033A	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1354 :: 		
0x033C	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1355 :: 		
0x033E	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1356 :: 		
0x0340	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1357 :: 		
0x0342	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1358 :: 		
0x0344	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1359 :: 		
0x0346	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1360 :: 		
0x0348	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1361 :: 		
0x034A	0x0E01      	MOVLW       1
;__Lib_Math.c,1362 :: 		
0x034C	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1364 :: 		
UOK22LB:
;__Lib_Math.c,1365 :: 		
0x034E	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1367 :: 		
0x0350	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1368 :: 		
0x0352	0xD7D1      	BRA         LOOPU3232B
;__Lib_Math.c,1370 :: 		
0x0354	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1371 :: 		
0x0356	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1372 :: 		
0x0358	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1373 :: 		
0x035A	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1374 :: 		
0x035C	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1375 :: 		
0x035E	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1376 :: 		
0x0360	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1377 :: 		
0x0362	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1378 :: 		
0x0364	0xD012      	BRA         UADD22L16
;__Lib_Math.c,1380 :: 		
0x0366	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1381 :: 		
0x0368	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1382 :: 		
0x036A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1383 :: 		
0x036C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1384 :: 		
0x036E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1385 :: 		
0x0370	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1386 :: 		
0x0372	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1387 :: 		
0x0374	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1388 :: 		
0x0376	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1389 :: 		
0x0378	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1390 :: 		
0x037A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1391 :: 		
0x037C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1392 :: 		
0x037E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1393 :: 		
0x0380	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1394 :: 		
0x0382	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1395 :: 		
0x0384	0x0E01      	MOVLW       1
;__Lib_Math.c,1396 :: 		
0x0386	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1397 :: 		
0x0388	0xD011      	BRA         UOK22L16
;__Lib_Math.c,1399 :: 		
UADD22L16:
;__Lib_Math.c,1400 :: 		
0x038A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1401 :: 		
0x038C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1402 :: 		
0x038E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1403 :: 		
0x0390	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1404 :: 		
0x0392	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1405 :: 		
0x0394	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1406 :: 		
0x0396	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1407 :: 		
0x0398	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1408 :: 		
0x039A	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1409 :: 		
0x039C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1410 :: 		
0x039E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1411 :: 		
0x03A0	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1412 :: 		
0x03A2	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1413 :: 		
0x03A4	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1414 :: 		
0x03A6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1415 :: 		
0x03A8	0x0E01      	MOVLW       1
;__Lib_Math.c,1416 :: 		
0x03AA	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1418 :: 		
UOK22L16:
;__Lib_Math.c,1419 :: 		
0x03AC	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1421 :: 		
0x03AE	0x0E07      	MOVLW       7
;__Lib_Math.c,1422 :: 		
0x03B0	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1424 :: 		
LOOPU3232C:
;__Lib_Math.c,1425 :: 		
0x03B2	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1426 :: 		
0x03B4	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1427 :: 		
0x03B6	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1428 :: 		
0x03B8	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1429 :: 		
0x03BA	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1430 :: 		
0x03BC	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1431 :: 		
0x03BE	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1432 :: 		
0x03C0	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1433 :: 		
0x03C2	0xD012      	BRA         UADD22LC
;__Lib_Math.c,1435 :: 		
0x03C4	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1436 :: 		
0x03C6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1437 :: 		
0x03C8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1438 :: 		
0x03CA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1439 :: 		
0x03CC	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1440 :: 		
0x03CE	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1441 :: 		
0x03D0	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1442 :: 		
0x03D2	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1443 :: 		
0x03D4	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1444 :: 		
0x03D6	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1445 :: 		
0x03D8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1446 :: 		
0x03DA	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1447 :: 		
0x03DC	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1448 :: 		
0x03DE	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1449 :: 		
0x03E0	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1450 :: 		
0x03E2	0x0E01      	MOVLW       1
;__Lib_Math.c,1451 :: 		
0x03E4	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1452 :: 		
0x03E6	0xD011      	BRA         UOK22LC
;__Lib_Math.c,1454 :: 		
UADD22LC:
;__Lib_Math.c,1455 :: 		
0x03E8	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1456 :: 		
0x03EA	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1457 :: 		
0x03EC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1458 :: 		
0x03EE	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1459 :: 		
0x03F0	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1460 :: 		
0x03F2	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1461 :: 		
0x03F4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1462 :: 		
0x03F6	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1463 :: 		
0x03F8	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1464 :: 		
0x03FA	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1465 :: 		
0x03FC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1466 :: 		
0x03FE	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1467 :: 		
0x0400	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1468 :: 		
0x0402	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1469 :: 		
0x0404	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1470 :: 		
0x0406	0x0E01      	MOVLW       1
;__Lib_Math.c,1471 :: 		
0x0408	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1473 :: 		
UOK22LC:
;__Lib_Math.c,1474 :: 		
0x040A	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1476 :: 		
0x040C	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1477 :: 		
0x040E	0xD7D1      	BRA         LOOPU3232C
;__Lib_Math.c,1479 :: 		
0x0410	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1480 :: 		
0x0412	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1481 :: 		
0x0414	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1482 :: 		
0x0416	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1483 :: 		
0x0418	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1484 :: 		
0x041A	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1485 :: 		
0x041C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1486 :: 		
0x041E	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1487 :: 		
0x0420	0xD012      	BRA         UADD22L24
;__Lib_Math.c,1489 :: 		
0x0422	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1490 :: 		
0x0424	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1491 :: 		
0x0426	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1492 :: 		
0x0428	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1493 :: 		
0x042A	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1494 :: 		
0x042C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1495 :: 		
0x042E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1496 :: 		
0x0430	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1497 :: 		
0x0432	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1498 :: 		
0x0434	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1499 :: 		
0x0436	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1500 :: 		
0x0438	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1501 :: 		
0x043A	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1502 :: 		
0x043C	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1503 :: 		
0x043E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1504 :: 		
0x0440	0x0E01      	MOVLW       1
;__Lib_Math.c,1505 :: 		
0x0442	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1506 :: 		
0x0444	0xD011      	BRA         UOK22L24
;__Lib_Math.c,1508 :: 		
UADD22L24:
;__Lib_Math.c,1509 :: 		
0x0446	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1510 :: 		
0x0448	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1511 :: 		
0x044A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1512 :: 		
0x044C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1513 :: 		
0x044E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1514 :: 		
0x0450	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1515 :: 		
0x0452	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1516 :: 		
0x0454	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1517 :: 		
0x0456	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1518 :: 		
0x0458	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1519 :: 		
0x045A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1520 :: 		
0x045C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1521 :: 		
0x045E	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1522 :: 		
0x0460	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1523 :: 		
0x0462	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1524 :: 		
0x0464	0x0E01      	MOVLW       1
;__Lib_Math.c,1525 :: 		
0x0466	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1527 :: 		
UOK22L24:
;__Lib_Math.c,1528 :: 		
0x0468	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1530 :: 		
0x046A	0x0E07      	MOVLW       7
;__Lib_Math.c,1531 :: 		
0x046C	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1533 :: 		
LOOPU3232D:
;__Lib_Math.c,1534 :: 		
0x046E	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1535 :: 		
0x0470	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1536 :: 		
0x0472	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1537 :: 		
0x0474	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1538 :: 		
0x0476	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1539 :: 		
0x0478	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1540 :: 		
0x047A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1541 :: 		
0x047C	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,1542 :: 		
0x047E	0xD012      	BRA         UADD22LD
;__Lib_Math.c,1544 :: 		
0x0480	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1545 :: 		
0x0482	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1546 :: 		
0x0484	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1547 :: 		
0x0486	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1548 :: 		
0x0488	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1549 :: 		
0x048A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1550 :: 		
0x048C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1551 :: 		
0x048E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1552 :: 		
0x0490	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1553 :: 		
0x0492	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1554 :: 		
0x0494	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1555 :: 		
0x0496	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1556 :: 		
0x0498	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1557 :: 		
0x049A	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1558 :: 		
0x049C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1559 :: 		
0x049E	0x0E01      	MOVLW       1
;__Lib_Math.c,1560 :: 		
0x04A0	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1561 :: 		
0x04A2	0xD011      	BRA         UOK22LD
;__Lib_Math.c,1563 :: 		
UADD22LD:
;__Lib_Math.c,1564 :: 		
0x04A4	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1565 :: 		
0x04A6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1566 :: 		
0x04A8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1567 :: 		
0x04AA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1568 :: 		
0x04AC	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1569 :: 		
0x04AE	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1570 :: 		
0x04B0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1571 :: 		
0x04B2	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1572 :: 		
0x04B4	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1573 :: 		
0x04B6	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1574 :: 		
0x04B8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1575 :: 		
0x04BA	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1576 :: 		
0x04BC	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1577 :: 		
0x04BE	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,1578 :: 		
0x04C0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1579 :: 		
0x04C2	0x0E01      	MOVLW       1
;__Lib_Math.c,1580 :: 		
0x04C4	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1582 :: 		
UOK22LD:
;__Lib_Math.c,1583 :: 		
0x04C6	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1585 :: 		
0x04C8	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1586 :: 		
0x04CA	0xD7D1      	BRA         LOOPU3232D
;__Lib_Math.c,1588 :: 		
0x04CC	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,1589 :: 		
0x04CE	0xD00E      	BRA         UOK22L
;__Lib_Math.c,1590 :: 		
0x04D0	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1591 :: 		
0x04D2	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1592 :: 		
0x04D4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1593 :: 		
0x04D6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1594 :: 		
0x04D8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1595 :: 		
0x04DA	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1596 :: 		
0x04DC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1597 :: 		
0x04DE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1598 :: 		
0x04E0	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1599 :: 		
0x04E2	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1600 :: 		
0x04E4	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1601 :: 		
0x04E6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1602 :: 		
0x04E8	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1603 :: 		
0x04EA	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1605 :: 		
UOK22L:
;__Lib_Math.c,1607 :: 		
L_end_Div_32x32_U:
0x04EC	0x0012      	RETURN      0
; end of _Div_32x32_U
_printTone:
;frequencyToNoteConverter.c,131 :: 		void printTone(char* note, unsigned short octave){
;frequencyToNoteConverter.c,134 :: 		Lcd_Out(1,8,note);
0x04EE	0x0E01      	MOVLW       1
0x04F0	0x0102      	MOVLB       2
0x04F2	0x6F72      	MOVWF       FARG_Lcd_Out_row, 1
0x04F4	0x0E08      	MOVLW       8
0x04F6	0x6F73      	MOVWF       FARG_Lcd_Out_column, 1
0x04F8	0xF274C26F  	MOVFF       FARG_printTone_note, FARG_Lcd_Out_text
0x04FC	0xF275C270  	MOVFF       FARG_printTone_note+1, FARG_Lcd_Out_text+1
0x0500	0xDDFF      	RCALL       _Lcd_Out
;frequencyToNoteConverter.c,135 :: 		Lcd_Chr(1, 7, 48 + octave);
0x0502	0x0E01      	MOVLW       1
0x0504	0x0102      	MOVLB       2
0x0506	0x6F72      	MOVWF       FARG_Lcd_Chr_row, 1
0x0508	0x0E07      	MOVLW       7
0x050A	0x6F73      	MOVWF       FARG_Lcd_Chr_column, 1
0x050C	0x5171      	MOVF        FARG_printTone_octave, 0, 1
0x050E	0x0F30      	ADDLW       48
0x0510	0x6F74      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x0512	0xDE38      	RCALL       _Lcd_Chr
;frequencyToNoteConverter.c,136 :: 		}
L_end_printTone:
0x0514	0x0012      	RETURN      0
; end of _printTone
_getOctave:
;frequencyToNoteConverter.c,81 :: 		unsigned short getOctave(unsigned short semitone){
;frequencyToNoteConverter.c,82 :: 		return semitone / 12;
0x0516	0x0E0C      	MOVLW       12
0x0518	0x6E04      	MOVWF       R4 
0x051A	0xF000C264  	MOVFF       FARG_getOctave_semitone, R0
0x051E	0xDE62      	RCALL       _Div_8x8_U
;frequencyToNoteConverter.c,83 :: 		}
L_end_getOctave:
0x0520	0x0012      	RETURN      0
; end of _getOctave
_Lcd_Out_Freq:
;lcdRoutines.c,73 :: 		void Lcd_Out_Freq(unsigned short row, unsigned short col, unsigned long number){
;lcdRoutines.c,75 :: 		digits[0] = number % 10;
0x0522	0x0E0A      	MOVLW       10
0x0524	0x6E04      	MOVWF       R4 
0x0526	0x0E00      	MOVLW       0
0x0528	0x6E05      	MOVWF       R5 
0x052A	0x6E06      	MOVWF       R6 
0x052C	0x6E07      	MOVWF       R7 
0x052E	0xF000C266  	MOVFF       FARG_Lcd_Out_Freq_number, R0
0x0532	0xF001C267  	MOVFF       FARG_Lcd_Out_Freq_number+1, R1
0x0536	0xF002C268  	MOVFF       FARG_Lcd_Out_Freq_number+2, R2
0x053A	0xF003C269  	MOVFF       FARG_Lcd_Out_Freq_number+3, R3
0x053E	0xDE61      	RCALL       _Div_32x32_U
0x0540	0xF000C008  	MOVFF       R8, R0
0x0544	0xF001C009  	MOVFF       R9, R1
0x0548	0xF002C00A  	MOVFF       R10, R2
0x054C	0xF003C00B  	MOVFF       R11, R3
0x0550	0xF26AC000  	MOVFF       R0, Lcd_Out_Freq_digits_L0
;lcdRoutines.c,76 :: 		digits[1] = (number / 10) % 10;
0x0554	0x0E0A      	MOVLW       10
0x0556	0x6E04      	MOVWF       R4 
0x0558	0x0E00      	MOVLW       0
0x055A	0x6E05      	MOVWF       R5 
0x055C	0x6E06      	MOVWF       R6 
0x055E	0x6E07      	MOVWF       R7 
0x0560	0xF000C266  	MOVFF       FARG_Lcd_Out_Freq_number, R0
0x0564	0xF001C267  	MOVFF       FARG_Lcd_Out_Freq_number+1, R1
0x0568	0xF002C268  	MOVFF       FARG_Lcd_Out_Freq_number+2, R2
0x056C	0xF003C269  	MOVFF       FARG_Lcd_Out_Freq_number+3, R3
0x0570	0xDE48      	RCALL       _Div_32x32_U
0x0572	0x0E0A      	MOVLW       10
0x0574	0x6E04      	MOVWF       R4 
0x0576	0x0E00      	MOVLW       0
0x0578	0x6E05      	MOVWF       R5 
0x057A	0x6E06      	MOVWF       R6 
0x057C	0x6E07      	MOVWF       R7 
0x057E	0xDE41      	RCALL       _Div_32x32_U
0x0580	0xF000C008  	MOVFF       R8, R0
0x0584	0xF001C009  	MOVFF       R9, R1
0x0588	0xF002C00A  	MOVFF       R10, R2
0x058C	0xF003C00B  	MOVFF       R11, R3
0x0590	0xF26BC000  	MOVFF       R0, Lcd_Out_Freq_digits_L0+1
;lcdRoutines.c,77 :: 		digits[2] = (number / 100) % 10;
0x0594	0x0E64      	MOVLW       100
0x0596	0x6E04      	MOVWF       R4 
0x0598	0x0E00      	MOVLW       0
0x059A	0x6E05      	MOVWF       R5 
0x059C	0x6E06      	MOVWF       R6 
0x059E	0x6E07      	MOVWF       R7 
0x05A0	0xF000C266  	MOVFF       FARG_Lcd_Out_Freq_number, R0
0x05A4	0xF001C267  	MOVFF       FARG_Lcd_Out_Freq_number+1, R1
0x05A8	0xF002C268  	MOVFF       FARG_Lcd_Out_Freq_number+2, R2
0x05AC	0xF003C269  	MOVFF       FARG_Lcd_Out_Freq_number+3, R3
0x05B0	0xDE28      	RCALL       _Div_32x32_U
0x05B2	0x0E0A      	MOVLW       10
0x05B4	0x6E04      	MOVWF       R4 
0x05B6	0x0E00      	MOVLW       0
0x05B8	0x6E05      	MOVWF       R5 
0x05BA	0x6E06      	MOVWF       R6 
0x05BC	0x6E07      	MOVWF       R7 
0x05BE	0xDE21      	RCALL       _Div_32x32_U
0x05C0	0xF000C008  	MOVFF       R8, R0
0x05C4	0xF001C009  	MOVFF       R9, R1
0x05C8	0xF002C00A  	MOVFF       R10, R2
0x05CC	0xF003C00B  	MOVFF       R11, R3
0x05D0	0xF26CC000  	MOVFF       R0, Lcd_Out_Freq_digits_L0+2
;lcdRoutines.c,78 :: 		digits[3] = (number / 1000) % 10;
0x05D4	0x0EE8      	MOVLW       232
0x05D6	0x6E04      	MOVWF       R4 
0x05D8	0x0E03      	MOVLW       3
0x05DA	0x6E05      	MOVWF       R5 
0x05DC	0x0E00      	MOVLW       0
0x05DE	0x6E06      	MOVWF       R6 
0x05E0	0x6E07      	MOVWF       R7 
0x05E2	0xF000C266  	MOVFF       FARG_Lcd_Out_Freq_number, R0
0x05E6	0xF001C267  	MOVFF       FARG_Lcd_Out_Freq_number+1, R1
0x05EA	0xF002C268  	MOVFF       FARG_Lcd_Out_Freq_number+2, R2
0x05EE	0xF003C269  	MOVFF       FARG_Lcd_Out_Freq_number+3, R3
0x05F2	0xDE07      	RCALL       _Div_32x32_U
0x05F4	0x0E0A      	MOVLW       10
0x05F6	0x6E04      	MOVWF       R4 
0x05F8	0x0E00      	MOVLW       0
0x05FA	0x6E05      	MOVWF       R5 
0x05FC	0x6E06      	MOVWF       R6 
0x05FE	0x6E07      	MOVWF       R7 
0x0600	0xDE00      	RCALL       _Div_32x32_U
0x0602	0xF000C008  	MOVFF       R8, R0
0x0606	0xF001C009  	MOVFF       R9, R1
0x060A	0xF002C00A  	MOVFF       R10, R2
0x060E	0xF003C00B  	MOVFF       R11, R3
0x0612	0xF26DC000  	MOVFF       R0, Lcd_Out_Freq_digits_L0+3
;lcdRoutines.c,79 :: 		digits[4] = (number / 10000) % 10;
0x0616	0x0E10      	MOVLW       16
0x0618	0x6E04      	MOVWF       R4 
0x061A	0x0E27      	MOVLW       39
0x061C	0x6E05      	MOVWF       R5 
0x061E	0x0E00      	MOVLW       0
0x0620	0x6E06      	MOVWF       R6 
0x0622	0x6E07      	MOVWF       R7 
0x0624	0xF000C266  	MOVFF       FARG_Lcd_Out_Freq_number, R0
0x0628	0xF001C267  	MOVFF       FARG_Lcd_Out_Freq_number+1, R1
0x062C	0xF002C268  	MOVFF       FARG_Lcd_Out_Freq_number+2, R2
0x0630	0xF003C269  	MOVFF       FARG_Lcd_Out_Freq_number+3, R3
0x0634	0xDDE6      	RCALL       _Div_32x32_U
0x0636	0x0E0A      	MOVLW       10
0x0638	0x6E04      	MOVWF       R4 
0x063A	0x0E00      	MOVLW       0
0x063C	0x6E05      	MOVWF       R5 
0x063E	0x6E06      	MOVWF       R6 
0x0640	0x6E07      	MOVWF       R7 
0x0642	0xDDDF      	RCALL       _Div_32x32_U
0x0644	0xF000C008  	MOVFF       R8, R0
0x0648	0xF001C009  	MOVFF       R9, R1
0x064C	0xF002C00A  	MOVFF       R10, R2
0x0650	0xF003C00B  	MOVFF       R11, R3
0x0654	0xF26EC000  	MOVFF       R0, Lcd_Out_Freq_digits_L0+4
;lcdRoutines.c,80 :: 		digits[5] = (number / 100000) % 10;
0x0658	0x0EA0      	MOVLW       160
0x065A	0x6E04      	MOVWF       R4 
0x065C	0x0E86      	MOVLW       134
0x065E	0x6E05      	MOVWF       R5 
0x0660	0x0E01      	MOVLW       1
0x0662	0x6E06      	MOVWF       R6 
0x0664	0x0E00      	MOVLW       0
0x0666	0x6E07      	MOVWF       R7 
0x0668	0xF000C266  	MOVFF       FARG_Lcd_Out_Freq_number, R0
0x066C	0xF001C267  	MOVFF       FARG_Lcd_Out_Freq_number+1, R1
0x0670	0xF002C268  	MOVFF       FARG_Lcd_Out_Freq_number+2, R2
0x0674	0xF003C269  	MOVFF       FARG_Lcd_Out_Freq_number+3, R3
0x0678	0xDDC4      	RCALL       _Div_32x32_U
0x067A	0x0E0A      	MOVLW       10
0x067C	0x6E04      	MOVWF       R4 
0x067E	0x0E00      	MOVLW       0
0x0680	0x6E05      	MOVWF       R5 
0x0682	0x6E06      	MOVWF       R6 
0x0684	0x6E07      	MOVWF       R7 
0x0686	0xDDBD      	RCALL       _Div_32x32_U
0x0688	0xF000C008  	MOVFF       R8, R0
0x068C	0xF001C009  	MOVFF       R9, R1
0x0690	0xF002C00A  	MOVFF       R10, R2
0x0694	0xF003C00B  	MOVFF       R11, R3
0x0698	0xF26FC000  	MOVFF       R0, Lcd_Out_Freq_digits_L0+5
;lcdRoutines.c,82 :: 		Lcd_Chr(row, col+6, 48 + digits[0]);
0x069C	0xF272C264  	MOVFF       FARG_Lcd_Out_Freq_row, FARG_Lcd_Chr_row
0x06A0	0x0E06      	MOVLW       6
0x06A2	0x0102      	MOVLB       2
0x06A4	0x2565      	ADDWF       FARG_Lcd_Out_Freq_col, 0, 1
0x06A6	0x6F73      	MOVWF       FARG_Lcd_Chr_column, 1
0x06A8	0x516A      	MOVF        Lcd_Out_Freq_digits_L0, 0, 1
0x06AA	0x0F30      	ADDLW       48
0x06AC	0x6F74      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x06AE	0xDD6A      	RCALL       _Lcd_Chr
;lcdRoutines.c,83 :: 		Lcd_Chr(row, col+5, 48 + digits[1]);
0x06B0	0xF272C264  	MOVFF       FARG_Lcd_Out_Freq_row, FARG_Lcd_Chr_row
0x06B4	0x0E05      	MOVLW       5
0x06B6	0x0102      	MOVLB       2
0x06B8	0x2565      	ADDWF       FARG_Lcd_Out_Freq_col, 0, 1
0x06BA	0x6F73      	MOVWF       FARG_Lcd_Chr_column, 1
0x06BC	0x516B      	MOVF        Lcd_Out_Freq_digits_L0+1, 0, 1
0x06BE	0x0F30      	ADDLW       48
0x06C0	0x6F74      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x06C2	0xDD60      	RCALL       _Lcd_Chr
;lcdRoutines.c,84 :: 		Lcd_Chr(row, col+4, 46);
0x06C4	0xF272C264  	MOVFF       FARG_Lcd_Out_Freq_row, FARG_Lcd_Chr_row
0x06C8	0x0E04      	MOVLW       4
0x06CA	0x0102      	MOVLB       2
0x06CC	0x2565      	ADDWF       FARG_Lcd_Out_Freq_col, 0, 1
0x06CE	0x6F73      	MOVWF       FARG_Lcd_Chr_column, 1
0x06D0	0x0E2E      	MOVLW       46
0x06D2	0x6F74      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x06D4	0xDD57      	RCALL       _Lcd_Chr
;lcdRoutines.c,85 :: 		Lcd_Chr(row, col+3, 48 + digits[2]);
0x06D6	0xF272C264  	MOVFF       FARG_Lcd_Out_Freq_row, FARG_Lcd_Chr_row
0x06DA	0x0E03      	MOVLW       3
0x06DC	0x0102      	MOVLB       2
0x06DE	0x2565      	ADDWF       FARG_Lcd_Out_Freq_col, 0, 1
0x06E0	0x6F73      	MOVWF       FARG_Lcd_Chr_column, 1
0x06E2	0x516C      	MOVF        Lcd_Out_Freq_digits_L0+2, 0, 1
0x06E4	0x0F30      	ADDLW       48
0x06E6	0x6F74      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x06E8	0xDD4D      	RCALL       _Lcd_Chr
;lcdRoutines.c,86 :: 		Lcd_Chr(row, col+2, 48 + digits[3]);
0x06EA	0xF272C264  	MOVFF       FARG_Lcd_Out_Freq_row, FARG_Lcd_Chr_row
0x06EE	0x0E02      	MOVLW       2
0x06F0	0x0102      	MOVLB       2
0x06F2	0x2565      	ADDWF       FARG_Lcd_Out_Freq_col, 0, 1
0x06F4	0x6F73      	MOVWF       FARG_Lcd_Chr_column, 1
0x06F6	0x516D      	MOVF        Lcd_Out_Freq_digits_L0+3, 0, 1
0x06F8	0x0F30      	ADDLW       48
0x06FA	0x6F74      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x06FC	0xDD43      	RCALL       _Lcd_Chr
;lcdRoutines.c,87 :: 		Lcd_Chr(row, col+1, 48 + digits[4]);
0x06FE	0xF272C264  	MOVFF       FARG_Lcd_Out_Freq_row, FARG_Lcd_Chr_row
0x0702	0x0102      	MOVLB       2
0x0704	0x5165      	MOVF        FARG_Lcd_Out_Freq_col, 0, 1
0x0706	0x0F01      	ADDLW       1
0x0708	0x6F73      	MOVWF       FARG_Lcd_Chr_column, 1
0x070A	0x516E      	MOVF        Lcd_Out_Freq_digits_L0+4, 0, 1
0x070C	0x0F30      	ADDLW       48
0x070E	0x6F74      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x0710	0xDD39      	RCALL       _Lcd_Chr
;lcdRoutines.c,88 :: 		if(digits[5] == 0){
0x0712	0x0102      	MOVLB       2
0x0714	0x516F      	MOVF        Lcd_Out_Freq_digits_L0+5, 0, 1
0x0716	0x0A00      	XORLW       0
0x0718	0xE108      	BNZ         L_Lcd_Out_Freq0
;lcdRoutines.c,89 :: 		Lcd_Chr(row, col, 32);
0x071A	0xF272C264  	MOVFF       FARG_Lcd_Out_Freq_row, FARG_Lcd_Chr_row
0x071E	0xF273C265  	MOVFF       FARG_Lcd_Out_Freq_col, FARG_Lcd_Chr_column
0x0722	0x0E20      	MOVLW       32
0x0724	0x6F74      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x0726	0xDD2E      	RCALL       _Lcd_Chr
;lcdRoutines.c,90 :: 		} else {
0x0728	0xD009      	BRA         L_Lcd_Out_Freq1
L_Lcd_Out_Freq0:
;lcdRoutines.c,91 :: 		Lcd_Chr(row, col, 48 + digits[5]);
0x072A	0xF272C264  	MOVFF       FARG_Lcd_Out_Freq_row, FARG_Lcd_Chr_row
0x072E	0xF273C265  	MOVFF       FARG_Lcd_Out_Freq_col, FARG_Lcd_Chr_column
0x0732	0x0102      	MOVLB       2
0x0734	0x516F      	MOVF        Lcd_Out_Freq_digits_L0+5, 0, 1
0x0736	0x0F30      	ADDLW       48
0x0738	0x6F74      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x073A	0xDD24      	RCALL       _Lcd_Chr
;lcdRoutines.c,92 :: 		}
L_Lcd_Out_Freq1:
;lcdRoutines.c,93 :: 		}
L_end_Lcd_Out_Freq:
0x073C	0x0012      	RETURN      0
; end of _Lcd_Out_Freq
_lookupAndPrintTone:
;frequencyToNoteConverter.c,89 :: 		void lookupAndPrintTone(unsigned short octave, unsigned short semitone, int mismatch){
;frequencyToNoteConverter.c,90 :: 		switch (semitone){
0x073E	0xD06C      	BRA         L_lookupAndPrintTone15
;frequencyToNoteConverter.c,91 :: 		case 0:
L_lookupAndPrintTone17:
;frequencyToNoteConverter.c,92 :: 		printTone("-C  ", octave);
0x0740	0x0E6D      	MOVLW       ?lstr1_frequencyToNoteConverter
0x0742	0x0102      	MOVLB       2
0x0744	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x0746	0x0E00      	MOVLW       hi_addr(?lstr1_frequencyToNoteConverter)
0x0748	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x074A	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x074E	0xDECF      	RCALL       _printTone
;frequencyToNoteConverter.c,93 :: 		break;
0x0750	0xD088      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,94 :: 		case 1:
L_lookupAndPrintTone18:
;frequencyToNoteConverter.c,95 :: 		printTone("-C# ", octave);
0x0752	0x0E68      	MOVLW       ?lstr2_frequencyToNoteConverter
0x0754	0x0102      	MOVLB       2
0x0756	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x0758	0x0E00      	MOVLW       hi_addr(?lstr2_frequencyToNoteConverter)
0x075A	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x075C	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x0760	0xDEC6      	RCALL       _printTone
;frequencyToNoteConverter.c,96 :: 		break;
0x0762	0xD07F      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,97 :: 		case 2:
L_lookupAndPrintTone19:
;frequencyToNoteConverter.c,98 :: 		printTone("-D  ", octave);
0x0764	0x0E77      	MOVLW       ?lstr3_frequencyToNoteConverter
0x0766	0x0102      	MOVLB       2
0x0768	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x076A	0x0E00      	MOVLW       hi_addr(?lstr3_frequencyToNoteConverter)
0x076C	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x076E	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x0772	0xDEBD      	RCALL       _printTone
;frequencyToNoteConverter.c,99 :: 		break;
0x0774	0xD076      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,100 :: 		case 3:
L_lookupAndPrintTone20:
;frequencyToNoteConverter.c,101 :: 		printTone("-D# ", octave);
0x0776	0x0E72      	MOVLW       ?lstr4_frequencyToNoteConverter
0x0778	0x0102      	MOVLB       2
0x077A	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x077C	0x0E00      	MOVLW       hi_addr(?lstr4_frequencyToNoteConverter)
0x077E	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x0780	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x0784	0xDEB4      	RCALL       _printTone
;frequencyToNoteConverter.c,102 :: 		break;
0x0786	0xD06D      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,103 :: 		case 4:
L_lookupAndPrintTone21:
;frequencyToNoteConverter.c,104 :: 		printTone("-E  ", octave);
0x0788	0x0E43      	MOVLW       ?lstr5_frequencyToNoteConverter
0x078A	0x0102      	MOVLB       2
0x078C	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x078E	0x0E00      	MOVLW       hi_addr(?lstr5_frequencyToNoteConverter)
0x0790	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x0792	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x0796	0xDEAB      	RCALL       _printTone
;frequencyToNoteConverter.c,105 :: 		break;
0x0798	0xD064      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,106 :: 		case 5:
L_lookupAndPrintTone22:
;frequencyToNoteConverter.c,107 :: 		printTone("-F  ", octave);
0x079A	0x0E3E      	MOVLW       ?lstr6_frequencyToNoteConverter
0x079C	0x0102      	MOVLB       2
0x079E	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x07A0	0x0E00      	MOVLW       hi_addr(?lstr6_frequencyToNoteConverter)
0x07A2	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x07A4	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x07A8	0xDEA2      	RCALL       _printTone
;frequencyToNoteConverter.c,108 :: 		break;
0x07AA	0xD05B      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,109 :: 		case 6:
L_lookupAndPrintTone23:
;frequencyToNoteConverter.c,110 :: 		printTone("-F# ", octave);
0x07AC	0x0E5E      	MOVLW       ?lstr7_frequencyToNoteConverter
0x07AE	0x0102      	MOVLB       2
0x07B0	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x07B2	0x0E00      	MOVLW       hi_addr(?lstr7_frequencyToNoteConverter)
0x07B4	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x07B6	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x07BA	0xDE99      	RCALL       _printTone
;frequencyToNoteConverter.c,111 :: 		break;
0x07BC	0xD052      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,112 :: 		case 7:
L_lookupAndPrintTone24:
;frequencyToNoteConverter.c,113 :: 		printTone("-G  ", octave);
0x07BE	0x0E63      	MOVLW       ?lstr8_frequencyToNoteConverter
0x07C0	0x0102      	MOVLB       2
0x07C2	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x07C4	0x0E00      	MOVLW       hi_addr(?lstr8_frequencyToNoteConverter)
0x07C6	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x07C8	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x07CC	0xDE90      	RCALL       _printTone
;frequencyToNoteConverter.c,114 :: 		break;
0x07CE	0xD049      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,115 :: 		case 8:
L_lookupAndPrintTone25:
;frequencyToNoteConverter.c,116 :: 		printTone("-G# ", octave);
0x07D0	0x0E54      	MOVLW       ?lstr9_frequencyToNoteConverter
0x07D2	0x0102      	MOVLB       2
0x07D4	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x07D6	0x0E00      	MOVLW       hi_addr(?lstr9_frequencyToNoteConverter)
0x07D8	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x07DA	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x07DE	0xDE87      	RCALL       _printTone
;frequencyToNoteConverter.c,117 :: 		break;
0x07E0	0xD040      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,118 :: 		case 9:
L_lookupAndPrintTone26:
;frequencyToNoteConverter.c,119 :: 		printTone("-A  ", octave);
0x07E2	0x0E59      	MOVLW       ?lstr10_frequencyToNoteConverter
0x07E4	0x0102      	MOVLB       2
0x07E6	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x07E8	0x0E00      	MOVLW       hi_addr(?lstr10_frequencyToNoteConverter)
0x07EA	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x07EC	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x07F0	0xDE7E      	RCALL       _printTone
;frequencyToNoteConverter.c,120 :: 		break;
0x07F2	0xD037      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,121 :: 		case 10:
L_lookupAndPrintTone27:
;frequencyToNoteConverter.c,122 :: 		printTone("-A# ", octave);
0x07F4	0x0E49      	MOVLW       ?lstr11_frequencyToNoteConverter
0x07F6	0x0102      	MOVLB       2
0x07F8	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x07FA	0x0E00      	MOVLW       hi_addr(?lstr11_frequencyToNoteConverter)
0x07FC	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x07FE	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x0802	0xDE75      	RCALL       _printTone
;frequencyToNoteConverter.c,123 :: 		break;
0x0804	0xD02E      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,124 :: 		case 11:
L_lookupAndPrintTone28:
;frequencyToNoteConverter.c,125 :: 		printTone("-B ", octave);
0x0806	0x0E3A      	MOVLW       ?lstr12_frequencyToNoteConverter
0x0808	0x0102      	MOVLB       2
0x080A	0x6F6F      	MOVWF       FARG_printTone_note, 1
0x080C	0x0E00      	MOVLW       hi_addr(?lstr12_frequencyToNoteConverter)
0x080E	0x6F70      	MOVWF       FARG_printTone_note+1, 1
0x0810	0xF271C264  	MOVFF       FARG_lookupAndPrintTone_octave, FARG_printTone_octave
0x0814	0xDE6C      	RCALL       _printTone
;frequencyToNoteConverter.c,126 :: 		break;
0x0816	0xD025      	BRA         L_lookupAndPrintTone16
;frequencyToNoteConverter.c,127 :: 		}
L_lookupAndPrintTone15:
0x0818	0x0102      	MOVLB       2
0x081A	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x081C	0x0A00      	XORLW       0
0x081E	0xE090      	BZ          L_lookupAndPrintTone17
0x0820	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x0822	0x0A01      	XORLW       1
0x0824	0xE096      	BZ          L_lookupAndPrintTone18
0x0826	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x0828	0x0A02      	XORLW       2
0x082A	0xE09C      	BZ          L_lookupAndPrintTone19
0x082C	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x082E	0x0A03      	XORLW       3
0x0830	0xE0A2      	BZ          L_lookupAndPrintTone20
0x0832	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x0834	0x0A04      	XORLW       4
0x0836	0xE0A8      	BZ          L_lookupAndPrintTone21
0x0838	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x083A	0x0A05      	XORLW       5
0x083C	0xE0AE      	BZ          L_lookupAndPrintTone22
0x083E	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x0840	0x0A06      	XORLW       6
0x0842	0xE0B4      	BZ          L_lookupAndPrintTone23
0x0844	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x0846	0x0A07      	XORLW       7
0x0848	0xE0BA      	BZ          L_lookupAndPrintTone24
0x084A	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x084C	0x0A08      	XORLW       8
0x084E	0xE0C0      	BZ          L_lookupAndPrintTone25
0x0850	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x0852	0x0A09      	XORLW       9
0x0854	0xE0C6      	BZ          L_lookupAndPrintTone26
0x0856	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x0858	0x0A0A      	XORLW       10
0x085A	0xE0CC      	BZ          L_lookupAndPrintTone27
0x085C	0x5165      	MOVF        FARG_lookupAndPrintTone_semitone, 0, 1
0x085E	0x0A0B      	XORLW       11
0x0860	0xE0D2      	BZ          L_lookupAndPrintTone28
L_lookupAndPrintTone16:
;frequencyToNoteConverter.c,129 :: 		}
L_end_lookupAndPrintTone:
0x0862	0x0012      	RETURN      0
; end of _lookupAndPrintTone
_getSemitoneInOctave:
;frequencyToNoteConverter.c,85 :: 		unsigned short getSemitoneInOctave(unsigned short semitone){
;frequencyToNoteConverter.c,86 :: 		return semitone % 12;
0x0864	0x0E0C      	MOVLW       12
0x0866	0x6E04      	MOVWF       R4 
0x0868	0xF000C264  	MOVFF       FARG_getSemitoneInOctave_semitone, R0
0x086C	0xDCBB      	RCALL       _Div_8x8_U
0x086E	0xF000C008  	MOVFF       R8, R0
;frequencyToNoteConverter.c,87 :: 		}
L_end_getSemitoneInOctave:
0x0872	0x0012      	RETURN      0
; end of _getSemitoneInOctave
_Mul_8x8_S:
;__Lib_Math.c,418 :: 		
;__Lib_Math.c,423 :: 		
0x0874	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,424 :: 		
0x0876	0x0204      	MULWF       R4, 0
;__Lib_Math.c,426 :: 		
0x0878	0xBE04      	BTFSC       R4, 7, 0
;__Lib_Math.c,427 :: 		
0x087A	0x5EF4      	SUBWF       PRODH, 1, 0
;__Lib_Math.c,429 :: 		
0x087C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,430 :: 		
0x087E	0xBE00      	BTFSC       R0, 7, 0
;__Lib_Math.c,431 :: 		
0x0880	0x5EF4      	SUBWF       PRODH, 1, 0
;__Lib_Math.c,433 :: 		
0x0882	0xF000CFF3  	MOVFF       PRODL, R0
;__Lib_Math.c,434 :: 		
0x0886	0xF001CFF4  	MOVFF       PRODH, R1
;__Lib_Math.c,436 :: 		
L_end_Mul_8x8_S:
0x088A	0x0012      	RETURN      0
; end of _Mul_8x8_S
_Mul_16x16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x088C	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x088E	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0890	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0892	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0894	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x0896	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x089A	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x089E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x08A0	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x08A2	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x08A6	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x08AA	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x08AC	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x08AE	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x08B0	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x08B2	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x08B4	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x08B6	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x08B8	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x08BA	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x08BC	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x08BE	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x08C0	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x08C2	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x08C4	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x08C6	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x08C8	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x08CA	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x08CE	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x08D2	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x08D6	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16x16_U:
0x08DA	0x0012      	RETURN      0
; end of _Mul_16x16_U
_Mul_32x32_U:
;__Lib_Math.c,1616 :: 		
;__Lib_Math.c,1631 :: 		
0x08DC	0x0E22      	MOVLW       34
;__Lib_Math.c,1632 :: 		
0x08DE	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1633 :: 		
0x08E0	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1634 :: 		
0x08E2	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1635 :: 		
0x08E4	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1636 :: 		
0x08E6	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1638 :: 		
_NEXT:
;__Lib_Math.c,1642 :: 		
0x08E8	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1643 :: 		
0x08EA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1644 :: 		
0x08EC	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1645 :: 		
0x08EE	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1647 :: 		
_LOOP:
;__Lib_Math.c,1656 :: 		
0x08F0	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1657 :: 		
0x08F2	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1658 :: 		
0x08F4	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1659 :: 		
0x08F6	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1660 :: 		
0x08F8	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1661 :: 		
0x08FA	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1662 :: 		
0x08FC	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1663 :: 		
0x08FE	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1668 :: 		
0x0900	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1669 :: 		
0x0902	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1670 :: 		
0x0904	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1671 :: 		
0x0906	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1672 :: 		
0x0908	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1679 :: 		
0x090A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1680 :: 		
0x090C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1681 :: 		
0x090E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1684 :: 		
0x0910	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1685 :: 		
0x0912	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1688 :: 		
0x0914	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1689 :: 		
0x0916	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1692 :: 		
0x0918	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1694 :: 		
0x091A	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1696 :: 		
_EXIT1:
;__Lib_Math.c,1701 :: 		
0x091C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1702 :: 		
0x091E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1703 :: 		
0x0920	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1706 :: 		
0x0922	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1707 :: 		
0x0924	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1710 :: 		
0x0926	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1711 :: 		
0x0928	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1714 :: 		
0x092A	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1717 :: 		
_EXIT2:
;__Lib_Math.c,1719 :: 		
L_end_Mul_32x32_U:
0x092C	0x0012      	RETURN      0
; end of _Mul_32x32_U
_Delay_5ms:
;__Lib_Delays.c,39 :: 		void Delay_5ms() {
;__Lib_Delays.c,40 :: 		Delay_ms(5);
0x092E	0x0E21      	MOVLW       33
0x0930	0x6E0C      	MOVWF       R12, 0
0x0932	0x0E76      	MOVLW       118
0x0934	0x6E0D      	MOVWF       R13, 0
L_Delay_5ms7:
0x0936	0x2E0D      	DECFSZ      R13, 1, 0
0x0938	0xD7FE      	BRA         L_Delay_5ms7
0x093A	0x2E0C      	DECFSZ      R12, 1, 0
0x093C	0xD7FC      	BRA         L_Delay_5ms7
0x093E	0x0000      	NOP
;__Lib_Delays.c,41 :: 		}
L_end_Delay_5ms:
0x0940	0x0012      	RETURN      0
; end of _Delay_5ms
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0942	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0944	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0948	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x094A	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x094C	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x094E	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0950	0x0012      	RETURN      0
; end of ___CC2DW
_hardwareInit:
;frequencycounter.c,144 :: 		void hardwareInit(void) {          // basic hardware control
;frequencycounter.c,145 :: 		ADCON1 = 0x07;
0x0952	0x0E07      	MOVLW       7
0x0954	0x6EC1      	MOVWF       ADCON1 
;frequencycounter.c,146 :: 		PORTA = 0x00 ;
0x0956	0x6A80      	CLRF        PORTA 
;frequencycounter.c,147 :: 		TRISA = 0X00 ;
0x0958	0x6A92      	CLRF        TRISA 
;frequencycounter.c,148 :: 		PORTC = 0b00000100 ;             // normally high - depending on hardware
0x095A	0x0E04      	MOVLW       4
0x095C	0x6E82      	MOVWF       PORTC 
;frequencycounter.c,149 :: 		TRISC = 0b00000100 ;             // portc.b2 as input
0x095E	0x0E04      	MOVLW       4
0x0960	0x6E94      	MOVWF       TRISC 
;frequencycounter.c,151 :: 		T1CON.TMR1ON = 0 ;               // ensure it's off
0x0962	0x90CD      	BCF         T1CON, 0 
;frequencycounter.c,152 :: 		T1CON.T1OSCEN = 0 ;              // ensure OSC is OFF
0x0964	0x96CD      	BCF         T1CON, 3 
;frequencycounter.c,153 :: 		T1CON.TMR1CS = 0;                // Timer1 counts pulses from internal oscillator
0x0966	0x92CD      	BCF         T1CON, 1 
;frequencycounter.c,154 :: 		T1CON.T1CKPS1 = 0;               // prescale the input pulses
0x0968	0x9ACD      	BCF         T1CON, 5 
;frequencycounter.c,155 :: 		T1CON.T1CKPS0 = 0;               // Assigned T1 prescaler rate is 1:1 so T1 is Fosc/4 with 20Mhz clock = 0.2uS per tick
0x096A	0x98CD      	BCF         T1CON, 4 
;frequencycounter.c,157 :: 		INTCON.PEIE = 1 ;                // enable peripheral interrupts
0x096C	0x8CF2      	BSF         INTCON, 6 
;frequencycounter.c,158 :: 		PIE1.CCP1IE = 1 ;                // enable CCP1 capture interrupt
0x096E	0x849D      	BSF         PIE1, 2 
;frequencycounter.c,159 :: 		INTCON.GIE = 1 ;                 // enable global interrupts
0x0970	0x8EF2      	BSF         INTCON, 7 
;frequencycounter.c,160 :: 		}
L_end_hardwareInit:
0x0972	0x0012      	RETURN      0
; end of _hardwareInit
_frequencyCalculatorInit:
;frequencycounter.c,162 :: 		void frequencyCalculatorInit(unsigned short factor){
;frequencycounter.c,166 :: 		clockCyclesPerSecondTimesFactor = Clock_kHz() * 1000 * factor;
0x0974	0x0E00      	MOVLW       0
0x0976	0x6E00      	MOVWF       R0 
0x0978	0x0E2D      	MOVLW       45
0x097A	0x6E01      	MOVWF       R1 
0x097C	0x0E31      	MOVLW       49
0x097E	0x6E02      	MOVWF       R2 
0x0980	0x0E01      	MOVLW       1
0x0982	0x6E03      	MOVWF       R3 
0x0984	0xF004C251  	MOVFF       FARG_frequencyCalculatorInit_factor, R4
0x0988	0x0E00      	MOVLW       0
0x098A	0x6E05      	MOVWF       R5 
0x098C	0x6E06      	MOVWF       R6 
0x098E	0x6E07      	MOVWF       R7 
0x0990	0xDFA5      	RCALL       _Mul_32x32_U
0x0992	0xF04EC000  	MOVFF       R0, _clockCyclesPerSecondTimesFactor
0x0996	0xF04FC001  	MOVFF       R1, _clockCyclesPerSecondTimesFactor+1
0x099A	0xF050C002  	MOVFF       R2, _clockCyclesPerSecondTimesFactor+2
0x099E	0xF051C003  	MOVFF       R3, _clockCyclesPerSecondTimesFactor+3
;frequencycounter.c,169 :: 		clockCyclesPerTimerClick = 16;
0x09A2	0x0E10      	MOVLW       16
0x09A4	0x6E53      	MOVWF       _clockCyclesPerTimerClick 
;frequencycounter.c,173 :: 		interruptDelayClockCycles = 16 * 4 + 15;
0x09A6	0x0E4F      	MOVLW       79
0x09A8	0x6E52      	MOVWF       _interruptDelayClockCycles 
;frequencycounter.c,174 :: 		}
L_end_frequencyCalculatorInit:
0x09AA	0x0012      	RETURN      0
; end of _frequencyCalculatorInit
_storeInput:
;frequencycounter.c,238 :: 		void storeInput(void) {
;frequencycounter.c,239 :: 		if (pulsesCaptured == 0) {           // ignore startup delay - start storing between first + second edge
0x09AC	0x5048      	MOVF        _pulsesCaptured, 0 
0x09AE	0x0A00      	XORLW       0
0x09B0	0xE103      	BNZ         L_storeInput8
;frequencycounter.c,240 :: 		pulsesCaptured = 1 ;
0x09B2	0x0E01      	MOVLW       1
0x09B4	0x6E48      	MOVWF       _pulsesCaptured 
;frequencycounter.c,241 :: 		return ;
0x09B6	0xD016      	BRA         L_end_storeInput
;frequencycounter.c,242 :: 		}
L_storeInput8:
;frequencycounter.c,243 :: 		pulsesCaptured++;
0x09B8	0x2A48      	INCF        _pulsesCaptured, 1 
;frequencycounter.c,244 :: 		if(pulsesCaptured > pulsesToCapture){
0x09BA	0x5048      	MOVF        _pulsesCaptured, 0 
0x09BC	0x0810      	SUBLW       16
0x09BE	0xA0D8      	BTFSS       STATUS, 0 
;frequencycounter.c,245 :: 		CCP1CON = 0 ;                    // Stop capture when the desired number of pulses have been captured.
0x09C0	0x6ABD      	CLRF        CCP1CON 
;frequencycounter.c,246 :: 		}
L_storeInput9:
;frequencycounter.c,247 :: 		*(pCaptures++) = hi(capturedData) ;   // store captured hibyte:lobyte in array
0x09C2	0xFFE1C07F  	MOVFF       _pCaptures, FSR1L
0x09C6	0xFFE2C080  	MOVFF       _pCaptures+1, FSR1H
0x09CA	0xFFE6C07D  	MOVFF       _capturedData+1, POSTINC1
0x09CE	0x0100      	MOVLB       0
0x09D0	0x4B7F      	INFSNZ      _pCaptures, 1, 1
0x09D2	0x2B80      	INCF        _pCaptures+1, 1, 1
;frequencycounter.c,248 :: 		*(pCaptures++) = lo(capturedData) ;
0x09D4	0xFFE1C07F  	MOVFF       _pCaptures, FSR1L
0x09D8	0xFFE2C080  	MOVFF       _pCaptures+1, FSR1H
0x09DC	0xFFE6C07C  	MOVFF       _capturedData, POSTINC1
0x09E0	0x4B7F      	INFSNZ      _pCaptures, 1, 1
0x09E2	0x2B80      	INCF        _pCaptures+1, 1, 1
;frequencycounter.c,249 :: 		}
L_end_storeInput:
0x09E4	0x0012      	RETURN      0
; end of _storeInput
_initPitchArray:
;frequencyToNoteConverter.c,8 :: 		void initPitchArray(){
;frequencyToNoteConverter.c,11 :: 		short divideBy = 2;
0x09E6	0x0E02      	MOVLW       2
0x09E8	0x0102      	MOVLB       2
0x09EA	0x6F53      	MOVWF       initPitchArray_divideBy_L0, 1
;frequencyToNoteConverter.c,13 :: 		pitches[96]  = 418601; //C8
0x09EC	0x0E29      	MOVLW       41
0x09EE	0x6F21      	MOVWF       _pitches+384, 1
0x09F0	0x0E63      	MOVLW       99
0x09F2	0x6F22      	MOVWF       _pitches+385, 1
0x09F4	0x0E06      	MOVLW       6
0x09F6	0x6F23      	MOVWF       _pitches+386, 1
0x09F8	0x0E00      	MOVLW       0
0x09FA	0x6F24      	MOVWF       _pitches+387, 1
;frequencyToNoteConverter.c,14 :: 		pitches[97]  = 443492;
0x09FC	0x0E64      	MOVLW       100
0x09FE	0x6F25      	MOVWF       _pitches+388, 1
0x0A00	0x0EC4      	MOVLW       196
0x0A02	0x6F26      	MOVWF       _pitches+389, 1
0x0A04	0x0E06      	MOVLW       6
0x0A06	0x6F27      	MOVWF       _pitches+390, 1
0x0A08	0x0E00      	MOVLW       0
0x0A0A	0x6F28      	MOVWF       _pitches+391, 1
;frequencyToNoteConverter.c,15 :: 		pitches[98]  = 469864;
0x0A0C	0x0E68      	MOVLW       104
0x0A0E	0x6F29      	MOVWF       _pitches+392, 1
0x0A10	0x0E2B      	MOVLW       43
0x0A12	0x6F2A      	MOVWF       _pitches+393, 1
0x0A14	0x0E07      	MOVLW       7
0x0A16	0x6F2B      	MOVWF       _pitches+394, 1
0x0A18	0x0E00      	MOVLW       0
0x0A1A	0x6F2C      	MOVWF       _pitches+395, 1
;frequencyToNoteConverter.c,16 :: 		pitches[99]  = 497803;
0x0A1C	0x0E8B      	MOVLW       139
0x0A1E	0x6F2D      	MOVWF       _pitches+396, 1
0x0A20	0x0E98      	MOVLW       152
0x0A22	0x6F2E      	MOVWF       _pitches+397, 1
0x0A24	0x0E07      	MOVLW       7
0x0A26	0x6F2F      	MOVWF       _pitches+398, 1
0x0A28	0x0E00      	MOVLW       0
0x0A2A	0x6F30      	MOVWF       _pitches+399, 1
;frequencyToNoteConverter.c,17 :: 		pitches[100]  = 527404;
0x0A2C	0x0E2C      	MOVLW       44
0x0A2E	0x6F31      	MOVWF       _pitches+400, 1
0x0A30	0x0E0C      	MOVLW       12
0x0A32	0x6F32      	MOVWF       _pitches+401, 1
0x0A34	0x0E08      	MOVLW       8
0x0A36	0x6F33      	MOVWF       _pitches+402, 1
0x0A38	0x0E00      	MOVLW       0
0x0A3A	0x6F34      	MOVWF       _pitches+403, 1
;frequencyToNoteConverter.c,18 :: 		pitches[101]  = 558765;
0x0A3C	0x0EAD      	MOVLW       173
0x0A3E	0x6F35      	MOVWF       _pitches+404, 1
0x0A40	0x0E86      	MOVLW       134
0x0A42	0x6F36      	MOVWF       _pitches+405, 1
0x0A44	0x0E08      	MOVLW       8
0x0A46	0x6F37      	MOVWF       _pitches+406, 1
0x0A48	0x0E00      	MOVLW       0
0x0A4A	0x6F38      	MOVWF       _pitches+407, 1
;frequencyToNoteConverter.c,19 :: 		pitches[102]  = 591991;
0x0A4C	0x0E77      	MOVLW       119
0x0A4E	0x6F39      	MOVWF       _pitches+408, 1
0x0A50	0x0E08      	MOVLW       8
0x0A52	0x6F3A      	MOVWF       _pitches+409, 1
0x0A54	0x0E09      	MOVLW       9
0x0A56	0x6F3B      	MOVWF       _pitches+410, 1
0x0A58	0x0E00      	MOVLW       0
0x0A5A	0x6F3C      	MOVWF       _pitches+411, 1
;frequencyToNoteConverter.c,20 :: 		pitches[103]  = 627193;
0x0A5C	0x0EF9      	MOVLW       249
0x0A5E	0x6F3D      	MOVWF       _pitches+412, 1
0x0A60	0x0E91      	MOVLW       145
0x0A62	0x6F3E      	MOVWF       _pitches+413, 1
0x0A64	0x0E09      	MOVLW       9
0x0A66	0x6F3F      	MOVWF       _pitches+414, 1
0x0A68	0x0E00      	MOVLW       0
0x0A6A	0x6F40      	MOVWF       _pitches+415, 1
;frequencyToNoteConverter.c,21 :: 		pitches[104]  = 664488;
0x0A6C	0x0EA8      	MOVLW       168
0x0A6E	0x6F41      	MOVWF       _pitches+416, 1
0x0A70	0x0E23      	MOVLW       35
0x0A72	0x6F42      	MOVWF       _pitches+417, 1
0x0A74	0x0E0A      	MOVLW       10
0x0A76	0x6F43      	MOVWF       _pitches+418, 1
0x0A78	0x0E00      	MOVLW       0
0x0A7A	0x6F44      	MOVWF       _pitches+419, 1
;frequencyToNoteConverter.c,22 :: 		pitches[105]  = 704000;
0x0A7C	0x0E00      	MOVLW       0
0x0A7E	0x6F45      	MOVWF       _pitches+420, 1
0x0A80	0x0EBE      	MOVLW       190
0x0A82	0x6F46      	MOVWF       _pitches+421, 1
0x0A84	0x0E0A      	MOVLW       10
0x0A86	0x6F47      	MOVWF       _pitches+422, 1
0x0A88	0x0E00      	MOVLW       0
0x0A8A	0x6F48      	MOVWF       _pitches+423, 1
;frequencyToNoteConverter.c,23 :: 		pitches[106]  = 745862;
0x0A8C	0x0E86      	MOVLW       134
0x0A8E	0x6F49      	MOVWF       _pitches+424, 1
0x0A90	0x0E61      	MOVLW       97
0x0A92	0x6F4A      	MOVWF       _pitches+425, 1
0x0A94	0x0E0B      	MOVLW       11
0x0A96	0x6F4B      	MOVWF       _pitches+426, 1
0x0A98	0x0E00      	MOVLW       0
0x0A9A	0x6F4C      	MOVWF       _pitches+427, 1
;frequencyToNoteConverter.c,24 :: 		pitches[107]  = 790213; //B8
0x0A9C	0x0EC5      	MOVLW       197
0x0A9E	0x6F4D      	MOVWF       _pitches+428, 1
0x0AA0	0x0E0E      	MOVLW       14
0x0AA2	0x6F4E      	MOVWF       _pitches+429, 1
0x0AA4	0x0E0C      	MOVLW       12
0x0AA6	0x6F4F      	MOVWF       _pitches+430, 1
0x0AA8	0x0E00      	MOVLW       0
0x0AAA	0x6F50      	MOVWF       _pitches+431, 1
;frequencyToNoteConverter.c,26 :: 		for(octave=7; octave>-1; octave--){
0x0AAC	0x0E07      	MOVLW       7
0x0AAE	0x6F51      	MOVWF       initPitchArray_octave_L0, 1
L_initPitchArray0:
0x0AB0	0x0E80      	MOVLW       128
0x0AB2	0x0AFF      	XORLW       255
0x0AB4	0x6E00      	MOVWF       R0 
0x0AB6	0x0E80      	MOVLW       128
0x0AB8	0x1951      	XORWF       initPitchArray_octave_L0, 0, 1
0x0ABA	0x5C00      	SUBWF       R0, 0 
0x0ABC	0xE26C      	BC          L_initPitchArray1
;frequencyToNoteConverter.c,27 :: 		for(semitone=0; semitone<12; semitone++){
0x0ABE	0x6B52      	CLRF        initPitchArray_semitone_L0, 1
L_initPitchArray3:
0x0AC0	0x0E80      	MOVLW       128
0x0AC2	0x1952      	XORWF       initPitchArray_semitone_L0, 0, 1
0x0AC4	0x6E00      	MOVWF       R0 
0x0AC6	0x0E80      	MOVLW       128
0x0AC8	0x0A0C      	XORLW       12
0x0ACA	0x5C00      	SUBWF       R0, 0 
0x0ACC	0xE262      	BC          L_initPitchArray4
;frequencyToNoteConverter.c,28 :: 		pitches[octave * 12 + semitone] = pitches[(octave+1) * 12 + semitone] / divideBy;
0x0ACE	0xF000C251  	MOVFF       initPitchArray_octave_L0, R0
0x0AD2	0x0E0C      	MOVLW       12
0x0AD4	0x6E04      	MOVWF       R4 
0x0AD6	0xDECE      	RCALL       _Mul_8x8_S
0x0AD8	0x5152      	MOVF        initPitchArray_semitone_L0, 0, 1
0x0ADA	0x2400      	ADDWF       R0, 0 
0x0ADC	0x6E03      	MOVWF       R3 
0x0ADE	0x0E00      	MOVLW       0
0x0AE0	0xBF52      	BTFSC       initPitchArray_semitone_L0, 7, 1
0x0AE2	0x0EFF      	MOVLW       255
0x0AE4	0x2001      	ADDWFC      R1, 0 
0x0AE6	0x6E04      	MOVWF       R4 
0x0AE8	0xF000C003  	MOVFF       R3, R0
0x0AEC	0xF001C004  	MOVFF       R4, R1
0x0AF0	0x3600      	RLCF        R0, 1 
0x0AF2	0x9000      	BCF         R0, 0 
0x0AF4	0x3601      	RLCF        R1, 1 
0x0AF6	0x3600      	RLCF        R0, 1 
0x0AF8	0x9000      	BCF         R0, 0 
0x0AFA	0x3601      	RLCF        R1, 1 
0x0AFC	0x0EA1      	MOVLW       _pitches
0x0AFE	0x2400      	ADDWF       R0, 0 
0x0B00	0x6F54      	MOVWF       FLOC__initPitchArray, 1
0x0B02	0x0E00      	MOVLW       hi_addr(_pitches)
0x0B04	0x2001      	ADDWFC      R1, 0 
0x0B06	0x6F55      	MOVWF       FLOC__initPitchArray+1, 1
0x0B08	0x5151      	MOVF        initPitchArray_octave_L0, 0, 1
0x0B0A	0x0F01      	ADDLW       1
0x0B0C	0x6E00      	MOVWF       R0 
0x0B0E	0x6A01      	CLRF        R1 
0x0B10	0x0E00      	MOVLW       0
0x0B12	0xBF51      	BTFSC       initPitchArray_octave_L0, 7, 1
0x0B14	0x0EFF      	MOVLW       255
0x0B16	0x2201      	ADDWFC      R1, 1 
0x0B18	0x0E0C      	MOVLW       12
0x0B1A	0x6E04      	MOVWF       R4 
0x0B1C	0x0E00      	MOVLW       0
0x0B1E	0x6E05      	MOVWF       R5 
0x0B20	0xDEB5      	RCALL       _Mul_16x16_U
0x0B22	0x5152      	MOVF        initPitchArray_semitone_L0, 0, 1
0x0B24	0x2400      	ADDWF       R0, 0 
0x0B26	0x6E03      	MOVWF       R3 
0x0B28	0x0E00      	MOVLW       0
0x0B2A	0xBF52      	BTFSC       initPitchArray_semitone_L0, 7, 1
0x0B2C	0x0EFF      	MOVLW       255
0x0B2E	0x2001      	ADDWFC      R1, 0 
0x0B30	0x6E04      	MOVWF       R4 
0x0B32	0xF000C003  	MOVFF       R3, R0
0x0B36	0xF001C004  	MOVFF       R4, R1
0x0B3A	0x3600      	RLCF        R0, 1 
0x0B3C	0x9000      	BCF         R0, 0 
0x0B3E	0x3601      	RLCF        R1, 1 
0x0B40	0x3600      	RLCF        R0, 1 
0x0B42	0x9000      	BCF         R0, 0 
0x0B44	0x3601      	RLCF        R1, 1 
0x0B46	0x0EA1      	MOVLW       _pitches
0x0B48	0x2400      	ADDWF       R0, 0 
0x0B4A	0x6EE9      	MOVWF       FSR0L 
0x0B4C	0x0E00      	MOVLW       hi_addr(_pitches)
0x0B4E	0x2001      	ADDWFC      R1, 0 
0x0B50	0x6EEA      	MOVWF       FSR0H 
0x0B52	0xF000CFEE  	MOVFF       POSTINC0, R0
0x0B56	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0B5A	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0B5E	0xF003CFEE  	MOVFF       POSTINC0, R3
0x0B62	0xF004C253  	MOVFF       initPitchArray_divideBy_L0, R4
0x0B66	0x0E00      	MOVLW       0
0x0B68	0xBF53      	BTFSC       initPitchArray_divideBy_L0, 7, 1
0x0B6A	0x0EFF      	MOVLW       255
0x0B6C	0x6E05      	MOVWF       R5 
0x0B6E	0x6E06      	MOVWF       R6 
0x0B70	0x6E07      	MOVWF       R7 
0x0B72	0xF001EC01  	CALL        _Div_32x32_U, 0
0x0B76	0xFFE1C254  	MOVFF       FLOC__initPitchArray, FSR1L
0x0B7A	0xFFE2C255  	MOVFF       FLOC__initPitchArray+1, FSR1H
0x0B7E	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0B82	0xFFE6C001  	MOVFF       R1, POSTINC1
0x0B86	0xFFE6C002  	MOVFF       R2, POSTINC1
0x0B8A	0xFFE6C003  	MOVFF       R3, POSTINC1
;frequencyToNoteConverter.c,27 :: 		for(semitone=0; semitone<12; semitone++){
0x0B8E	0x2B52      	INCF        initPitchArray_semitone_L0, 1, 1
;frequencyToNoteConverter.c,29 :: 		}
0x0B90	0xD797      	BRA         L_initPitchArray3
L_initPitchArray4:
;frequencyToNoteConverter.c,26 :: 		for(octave=7; octave>-1; octave--){
0x0B92	0x0751      	DECF        initPitchArray_octave_L0, 1, 1
;frequencyToNoteConverter.c,31 :: 		}
0x0B94	0xD78D      	BRA         L_initPitchArray0
L_initPitchArray1:
;frequencyToNoteConverter.c,32 :: 		}
L_end_initPitchArray:
0x0B96	0x0012      	RETURN      0
; end of _initPitchArray
_printNote:
;frequencyToNoteConverter.c,34 :: 		void printNote(unsigned int frequency, int factor){
;frequencyToNoteConverter.c,36 :: 		unsigned long frequency100 = (factor == 10 ? 10L * frequency  : 1L * frequency);
0x0B98	0x0E00      	MOVLW       0
0x0B9A	0x0102      	MOVLB       2
0x0B9C	0x1954      	XORWF       FARG_printNote_factor+1, 0, 1
0x0B9E	0xE102      	BNZ         L__printNote44
0x0BA0	0x0E0A      	MOVLW       10
0x0BA2	0x1953      	XORWF       FARG_printNote_factor, 0, 1
L__printNote44:
0x0BA4	0xE119      	BNZ         L_printNote6
0x0BA6	0x0E0A      	MOVLW       10
0x0BA8	0x6E00      	MOVWF       R0 
0x0BAA	0x0E00      	MOVLW       0
0x0BAC	0x6E01      	MOVWF       R1 
0x0BAE	0x0E00      	MOVLW       0
0x0BB0	0x6E02      	MOVWF       R2 
0x0BB2	0x0E00      	MOVLW       0
0x0BB4	0x6E03      	MOVWF       R3 
0x0BB6	0xF004C251  	MOVFF       FARG_printNote_frequency, R4
0x0BBA	0xF005C252  	MOVFF       FARG_printNote_frequency+1, R5
0x0BBE	0x0E00      	MOVLW       0
0x0BC0	0x6E06      	MOVWF       R6 
0x0BC2	0x6E07      	MOVWF       R7 
0x0BC4	0xDE8B      	RCALL       _Mul_32x32_U
0x0BC6	0xF004C000  	MOVFF       R0, R4
0x0BCA	0xF005C001  	MOVFF       R1, R5
0x0BCE	0xF006C002  	MOVFF       R2, R6
0x0BD2	0xF007C003  	MOVFF       R3, R7
0x0BD6	0xD00F      	BRA         L_printNote7
L_printNote6:
0x0BD8	0xF000C251  	MOVFF       FARG_printNote_frequency, R0
0x0BDC	0xF001C252  	MOVFF       FARG_printNote_frequency+1, R1
0x0BE0	0x0E00      	MOVLW       0
0x0BE2	0x6E02      	MOVWF       R2 
0x0BE4	0x6E03      	MOVWF       R3 
0x0BE6	0xF004C000  	MOVFF       R0, R4
0x0BEA	0xF005C001  	MOVFF       R1, R5
0x0BEE	0xF006C002  	MOVFF       R2, R6
0x0BF2	0xF007C003  	MOVFF       R3, R7
L_printNote7:
0x0BF6	0xF255C004  	MOVFF       R4, printNote_frequency100_L0
0x0BFA	0xF256C005  	MOVFF       R5, printNote_frequency100_L0+1
0x0BFE	0xF257C006  	MOVFF       R6, printNote_frequency100_L0+2
0x0C02	0xF258C007  	MOVFF       R7, printNote_frequency100_L0+3
;frequencyToNoteConverter.c,42 :: 		unsigned short lowerBound = 0;
0x0C06	0x6B5E      	CLRF        printNote_lowerBound_L0, 1
0x0C08	0x6B5F      	CLRF        printNote_upperBound_L0, 1
;frequencyToNoteConverter.c,51 :: 		for(semitone = 0; semitone < 108; semitone++){
0x0C0A	0x6B59      	CLRF        printNote_semitone_L0, 1
L_printNote8:
0x0C0C	0x0E6C      	MOVLW       108
0x0C0E	0x5D59      	SUBWF       printNote_semitone_L0, 0, 1
0x0C10	0xE22D      	BC          L_printNote9
;frequencyToNoteConverter.c,52 :: 		if(frequency100 > pitches[semitone]){
0x0C12	0xF000C259  	MOVFF       printNote_semitone_L0, R0
0x0C16	0x0E00      	MOVLW       0
0x0C18	0x6E01      	MOVWF       R1 
0x0C1A	0x3600      	RLCF        R0, 1 
0x0C1C	0x9000      	BCF         R0, 0 
0x0C1E	0x3601      	RLCF        R1, 1 
0x0C20	0x3600      	RLCF        R0, 1 
0x0C22	0x9000      	BCF         R0, 0 
0x0C24	0x3601      	RLCF        R1, 1 
0x0C26	0x0EA1      	MOVLW       _pitches
0x0C28	0x2400      	ADDWF       R0, 0 
0x0C2A	0x6ED9      	MOVWF       FSR2L 
0x0C2C	0x0E00      	MOVLW       hi_addr(_pitches)
0x0C2E	0x2001      	ADDWFC      R1, 0 
0x0C30	0x6EDA      	MOVWF       FSR2H 
0x0C32	0xF001CFDE  	MOVFF       POSTINC2, R1
0x0C36	0xF002CFDE  	MOVFF       POSTINC2, R2
0x0C3A	0xF003CFDE  	MOVFF       POSTINC2, R3
0x0C3E	0xF004CFDE  	MOVFF       POSTINC2, R4
0x0C42	0x5158      	MOVF        printNote_frequency100_L0+3, 0, 1
0x0C44	0x5C04      	SUBWF       R4, 0 
0x0C46	0xE108      	BNZ         L__printNote45
0x0C48	0x5157      	MOVF        printNote_frequency100_L0+2, 0, 1
0x0C4A	0x5C03      	SUBWF       R3, 0 
0x0C4C	0xE105      	BNZ         L__printNote45
0x0C4E	0x5156      	MOVF        printNote_frequency100_L0+1, 0, 1
0x0C50	0x5C02      	SUBWF       R2, 0 
0x0C52	0xE102      	BNZ         L__printNote45
0x0C54	0x5155      	MOVF        printNote_frequency100_L0, 0, 1
0x0C56	0x5C01      	SUBWF       R1, 0 
L__printNote45:
0x0C58	0xE206      	BC          L_printNote11
;frequencyToNoteConverter.c,53 :: 		lowerBound = semitone;
0x0C5A	0xF25EC259  	MOVFF       printNote_semitone_L0, printNote_lowerBound_L0
;frequencyToNoteConverter.c,54 :: 		upperBound = semitone+1;
0x0C5E	0x5159      	MOVF        printNote_semitone_L0, 0, 1
0x0C60	0x0F01      	ADDLW       1
0x0C62	0x6F5F      	MOVWF       printNote_upperBound_L0, 1
;frequencyToNoteConverter.c,55 :: 		} else {
0x0C64	0xD001      	BRA         L_printNote12
L_printNote11:
;frequencyToNoteConverter.c,56 :: 		break;
0x0C66	0xD002      	BRA         L_printNote9
;frequencyToNoteConverter.c,57 :: 		}
L_printNote12:
;frequencyToNoteConverter.c,51 :: 		for(semitone = 0; semitone < 108; semitone++){
0x0C68	0x2B59      	INCF        printNote_semitone_L0, 1, 1
;frequencyToNoteConverter.c,58 :: 		}
0x0C6A	0xD7D0      	BRA         L_printNote8
L_printNote9:
;frequencyToNoteConverter.c,60 :: 		if(frequency100 - pitches[lowerBound] > pitches[upperBound] - frequency100){
0x0C6C	0xF000C25E  	MOVFF       printNote_lowerBound_L0, R0
0x0C70	0x0E00      	MOVLW       0
0x0C72	0x6E01      	MOVWF       R1 
0x0C74	0x3600      	RLCF        R0, 1 
0x0C76	0x9000      	BCF         R0, 0 
0x0C78	0x3601      	RLCF        R1, 1 
0x0C7A	0x3600      	RLCF        R0, 1 
0x0C7C	0x9000      	BCF         R0, 0 
0x0C7E	0x3601      	RLCF        R1, 1 
0x0C80	0x0EA1      	MOVLW       _pitches
0x0C82	0x2400      	ADDWF       R0, 0 
0x0C84	0x6ED9      	MOVWF       FSR2L 
0x0C86	0x0E00      	MOVLW       hi_addr(_pitches)
0x0C88	0x2001      	ADDWFC      R1, 0 
0x0C8A	0x6EDA      	MOVWF       FSR2H 
0x0C8C	0xF005C255  	MOVFF       printNote_frequency100_L0, R5
0x0C90	0xF006C256  	MOVFF       printNote_frequency100_L0+1, R6
0x0C94	0xF007C257  	MOVFF       printNote_frequency100_L0+2, R7
0x0C98	0xF008C258  	MOVFF       printNote_frequency100_L0+3, R8
0x0C9C	0x50DE      	MOVF        POSTINC2, 0 
0x0C9E	0x5E05      	SUBWF       R5, 1 
0x0CA0	0x50DE      	MOVF        POSTINC2, 0 
0x0CA2	0x5A06      	SUBWFB      R6, 1 
0x0CA4	0x50DE      	MOVF        POSTINC2, 0 
0x0CA6	0x5A07      	SUBWFB      R7, 1 
0x0CA8	0x50DE      	MOVF        POSTINC2, 0 
0x0CAA	0x5A08      	SUBWFB      R8, 1 
0x0CAC	0xF000C25F  	MOVFF       printNote_upperBound_L0, R0
0x0CB0	0x0E00      	MOVLW       0
0x0CB2	0x6E01      	MOVWF       R1 
0x0CB4	0x3600      	RLCF        R0, 1 
0x0CB6	0x9000      	BCF         R0, 0 
0x0CB8	0x3601      	RLCF        R1, 1 
0x0CBA	0x3600      	RLCF        R0, 1 
0x0CBC	0x9000      	BCF         R0, 0 
0x0CBE	0x3601      	RLCF        R1, 1 
0x0CC0	0x0EA1      	MOVLW       _pitches
0x0CC2	0x2400      	ADDWF       R0, 0 
0x0CC4	0x6EE9      	MOVWF       FSR0L 
0x0CC6	0x0E00      	MOVLW       hi_addr(_pitches)
0x0CC8	0x2001      	ADDWFC      R1, 0 
0x0CCA	0x6EEA      	MOVWF       FSR0H 
0x0CCC	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0CD0	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0CD4	0xF003CFEE  	MOVFF       POSTINC0, R3
0x0CD8	0xF004CFEE  	MOVFF       POSTINC0, R4
0x0CDC	0x5155      	MOVF        printNote_frequency100_L0, 0, 1
0x0CDE	0x5E01      	SUBWF       R1, 1 
0x0CE0	0x5156      	MOVF        printNote_frequency100_L0+1, 0, 1
0x0CE2	0x5A02      	SUBWFB      R2, 1 
0x0CE4	0x5157      	MOVF        printNote_frequency100_L0+2, 0, 1
0x0CE6	0x5A03      	SUBWFB      R3, 1 
0x0CE8	0x5158      	MOVF        printNote_frequency100_L0+3, 0, 1
0x0CEA	0x5A04      	SUBWFB      R4, 1 
0x0CEC	0x5008      	MOVF        R8, 0 
0x0CEE	0x5C04      	SUBWF       R4, 0 
0x0CF0	0xE108      	BNZ         L__printNote46
0x0CF2	0x5007      	MOVF        R7, 0 
0x0CF4	0x5C03      	SUBWF       R3, 0 
0x0CF6	0xE105      	BNZ         L__printNote46
0x0CF8	0x5006      	MOVF        R6, 0 
0x0CFA	0x5C02      	SUBWF       R2, 0 
0x0CFC	0xE102      	BNZ         L__printNote46
0x0CFE	0x5005      	MOVF        R5, 0 
0x0D00	0x5C01      	SUBWF       R1, 0 
L__printNote46:
0x0D02	0xE203      	BC          L_printNote13
;frequencyToNoteConverter.c,61 :: 		closestMatch = upperBound;
0x0D04	0xF25AC25F  	MOVFF       printNote_upperBound_L0, printNote_closestMatch_L0
;frequencyToNoteConverter.c,62 :: 		} else {
0x0D08	0xD002      	BRA         L_printNote14
L_printNote13:
;frequencyToNoteConverter.c,63 :: 		closestMatch = lowerBound;
0x0D0A	0xF25AC25E  	MOVFF       printNote_lowerBound_L0, printNote_closestMatch_L0
;frequencyToNoteConverter.c,64 :: 		}
L_printNote14:
;frequencyToNoteConverter.c,66 :: 		Delay_5ms();
0x0D0E	0xDE0F      	RCALL       _Delay_5ms
;frequencyToNoteConverter.c,67 :: 		Lcd_Out_Freq(2, 1, frequency100);
0x0D10	0x0E02      	MOVLW       2
0x0D12	0x6F64      	MOVWF       FARG_Lcd_Out_Freq_row, 1
0x0D14	0x0E01      	MOVLW       1
0x0D16	0x6F65      	MOVWF       FARG_Lcd_Out_Freq_col, 1
0x0D18	0xF266C255  	MOVFF       printNote_frequency100_L0, FARG_Lcd_Out_Freq_number
0x0D1C	0xF267C256  	MOVFF       printNote_frequency100_L0+1, FARG_Lcd_Out_Freq_number+1
0x0D20	0xF268C257  	MOVFF       printNote_frequency100_L0+2, FARG_Lcd_Out_Freq_number+2
0x0D24	0xF269C258  	MOVFF       printNote_frequency100_L0+3, FARG_Lcd_Out_Freq_number+3
0x0D28	0xF002EC91  	CALL        _Lcd_Out_Freq, 0
;frequencyToNoteConverter.c,69 :: 		Delay_5ms();
0x0D2C	0xDE00      	RCALL       _Delay_5ms
;frequencyToNoteConverter.c,70 :: 		Lcd_Out_Freq(2, 9, pitches[closestMatch]);
0x0D2E	0x0E02      	MOVLW       2
0x0D30	0x0102      	MOVLB       2
0x0D32	0x6F64      	MOVWF       FARG_Lcd_Out_Freq_row, 1
0x0D34	0x0E09      	MOVLW       9
0x0D36	0x6F65      	MOVWF       FARG_Lcd_Out_Freq_col, 1
0x0D38	0xF000C25A  	MOVFF       printNote_closestMatch_L0, R0
0x0D3C	0x0E00      	MOVLW       0
0x0D3E	0x6E01      	MOVWF       R1 
0x0D40	0x3600      	RLCF        R0, 1 
0x0D42	0x9000      	BCF         R0, 0 
0x0D44	0x3601      	RLCF        R1, 1 
0x0D46	0x3600      	RLCF        R0, 1 
0x0D48	0x9000      	BCF         R0, 0 
0x0D4A	0x3601      	RLCF        R1, 1 
0x0D4C	0x0EA1      	MOVLW       _pitches
0x0D4E	0x2400      	ADDWF       R0, 0 
0x0D50	0x6EE9      	MOVWF       FSR0L 
0x0D52	0x0E00      	MOVLW       hi_addr(_pitches)
0x0D54	0x2001      	ADDWFC      R1, 0 
0x0D56	0x6EEA      	MOVWF       FSR0H 
0x0D58	0xF266CFEE  	MOVFF       POSTINC0, FARG_Lcd_Out_Freq_number
0x0D5C	0xF267CFEE  	MOVFF       POSTINC0, FARG_Lcd_Out_Freq_number+1
0x0D60	0xF268CFEE  	MOVFF       POSTINC0, FARG_Lcd_Out_Freq_number+2
0x0D64	0xF269CFEE  	MOVFF       POSTINC0, FARG_Lcd_Out_Freq_number+3
0x0D68	0xF002EC91  	CALL        _Lcd_Out_Freq, 0
;frequencyToNoteConverter.c,74 :: 		mismatch = 10000L * (frequency100 - pitches[closestMatch]) / pitches[closestMatch];
0x0D6C	0xF000C25A  	MOVFF       printNote_closestMatch_L0, R0
0x0D70	0x0E00      	MOVLW       0
0x0D72	0x6E01      	MOVWF       R1 
0x0D74	0x3600      	RLCF        R0, 1 
0x0D76	0x9000      	BCF         R0, 0 
0x0D78	0x3601      	RLCF        R1, 1 
0x0D7A	0x3600      	RLCF        R0, 1 
0x0D7C	0x9000      	BCF         R0, 0 
0x0D7E	0x3601      	RLCF        R1, 1 
0x0D80	0x0EA1      	MOVLW       _pitches
0x0D82	0x2400      	ADDWF       R0, 0 
0x0D84	0x6ED9      	MOVWF       FSR2L 
0x0D86	0x0E00      	MOVLW       hi_addr(_pitches)
0x0D88	0x2001      	ADDWFC      R1, 0 
0x0D8A	0x6EDA      	MOVWF       FSR2H 
0x0D8C	0xF260CFDE  	MOVFF       POSTINC2, FLOC__printNote
0x0D90	0xF261CFDE  	MOVFF       POSTINC2, FLOC__printNote+1
0x0D94	0xF262CFDE  	MOVFF       POSTINC2, FLOC__printNote+2
0x0D98	0xF263CFDE  	MOVFF       POSTINC2, FLOC__printNote+3
0x0D9C	0xF000C255  	MOVFF       printNote_frequency100_L0, R0
0x0DA0	0xF001C256  	MOVFF       printNote_frequency100_L0+1, R1
0x0DA4	0xF002C257  	MOVFF       printNote_frequency100_L0+2, R2
0x0DA8	0xF003C258  	MOVFF       printNote_frequency100_L0+3, R3
0x0DAC	0x0102      	MOVLB       2
0x0DAE	0x5160      	MOVF        FLOC__printNote, 0, 1
0x0DB0	0x5E00      	SUBWF       R0, 1 
0x0DB2	0x5161      	MOVF        FLOC__printNote+1, 0, 1
0x0DB4	0x5A01      	SUBWFB      R1, 1 
0x0DB6	0x5162      	MOVF        FLOC__printNote+2, 0, 1
0x0DB8	0x5A02      	SUBWFB      R2, 1 
0x0DBA	0x5163      	MOVF        FLOC__printNote+3, 0, 1
0x0DBC	0x5A03      	SUBWFB      R3, 1 
0x0DBE	0x0E10      	MOVLW       16
0x0DC0	0x6E04      	MOVWF       R4 
0x0DC2	0x0E27      	MOVLW       39
0x0DC4	0x6E05      	MOVWF       R5 
0x0DC6	0x0E00      	MOVLW       0
0x0DC8	0x6E06      	MOVWF       R6 
0x0DCA	0x0E00      	MOVLW       0
0x0DCC	0x6E07      	MOVWF       R7 
0x0DCE	0xDD86      	RCALL       _Mul_32x32_U
0x0DD0	0xF004C260  	MOVFF       FLOC__printNote, R4
0x0DD4	0xF005C261  	MOVFF       FLOC__printNote+1, R5
0x0DD8	0xF006C262  	MOVFF       FLOC__printNote+2, R6
0x0DDC	0xF007C263  	MOVFF       FLOC__printNote+3, R7
0x0DE0	0xF001EC01  	CALL        _Div_32x32_U, 0
0x0DE4	0xF25CC000  	MOVFF       R0, printNote_mismatch_L0
0x0DE8	0xF25DC001  	MOVFF       R1, printNote_mismatch_L0+1
;frequencyToNoteConverter.c,76 :: 		octave = getOctave(closestMatch);
0x0DEC	0xF264C25A  	MOVFF       printNote_closestMatch_L0, FARG_getOctave_semitone
0x0DF0	0xF002EC8B  	CALL        _getOctave, 0
0x0DF4	0xF25BC000  	MOVFF       R0, printNote_octave_L0
;frequencyToNoteConverter.c,77 :: 		semitoneInOctave = getSemitoneInOctave(closestMatch);
0x0DF8	0xF264C25A  	MOVFF       printNote_closestMatch_L0, FARG_getSemitoneInOctave_semitone
0x0DFC	0xDD33      	RCALL       _getSemitoneInOctave
;frequencyToNoteConverter.c,78 :: 		lookupAndPrintTone(octave, semitoneInOctave, mismatch);
0x0DFE	0xF264C25B  	MOVFF       printNote_octave_L0, FARG_lookupAndPrintTone_octave
0x0E02	0xF265C000  	MOVFF       R0, FARG_lookupAndPrintTone_semitone
0x0E06	0xF266C25C  	MOVFF       printNote_mismatch_L0, FARG_lookupAndPrintTone_mismatch
0x0E0A	0xF267C25D  	MOVFF       printNote_mismatch_L0+1, FARG_lookupAndPrintTone_mismatch+1
0x0E0E	0xDC97      	RCALL       _lookupAndPrintTone
;frequencyToNoteConverter.c,79 :: 		}
L_end_printNote:
0x0E10	0x0012      	RETURN      0
; end of _printNote
_getAverageCapture:
;frequencycounter.c,135 :: 		unsigned int getAverageCapture(){
;frequencycounter.c,137 :: 		unsigned long sum = 0;
0x0E12	0x0102      	MOVLB       2
0x0E14	0x6B51      	CLRF        getAverageCapture_sum_L0, 1
0x0E16	0x6B52      	CLRF        getAverageCapture_sum_L0+1, 1
0x0E18	0x6B53      	CLRF        getAverageCapture_sum_L0+2, 1
0x0E1A	0x6B54      	CLRF        getAverageCapture_sum_L0+3, 1
;frequencycounter.c,138 :: 		for(i=0; i<2*pulsesToCapture; i+=2){
0x0E1C	0x6A05      	CLRF        R5 
L_getAverageCapture4:
0x0E1E	0x0E20      	MOVLW       32
0x0E20	0x5C05      	SUBWF       R5, 0 
0x0E22	0xE229      	BC          L_getAverageCapture5
;frequencycounter.c,139 :: 		sum += (captures[i] << 8) + captures[i+1];  //combine two shorts to an int.
0x0E24	0x0E81      	MOVLW       _captures
0x0E26	0x6EE9      	MOVWF       FSR0L 
0x0E28	0x0E00      	MOVLW       hi_addr(_captures)
0x0E2A	0x6EEA      	MOVWF       FSR0H 
0x0E2C	0x5005      	MOVF        R5, 0 
0x0E2E	0x26E9      	ADDWF       FSR0L, 1 
0x0E30	0xB0D8      	BTFSC       STATUS, 0 
0x0E32	0x2AEA      	INCF        FSR0H, 1 
0x0E34	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0E38	0xF003C001  	MOVFF       R1, R3
0x0E3C	0x6A02      	CLRF        R2 
0x0E3E	0x5005      	MOVF        R5, 0 
0x0E40	0x0F01      	ADDLW       1
0x0E42	0x6E00      	MOVWF       R0 
0x0E44	0x6A01      	CLRF        R1 
0x0E46	0x0E00      	MOVLW       0
0x0E48	0x2201      	ADDWFC      R1, 1 
0x0E4A	0x0E81      	MOVLW       _captures
0x0E4C	0x2400      	ADDWF       R0, 0 
0x0E4E	0x6ED9      	MOVWF       FSR2L 
0x0E50	0x0E00      	MOVLW       hi_addr(_captures)
0x0E52	0x2001      	ADDWFC      R1, 0 
0x0E54	0x6EDA      	MOVWF       FSR2H 
0x0E56	0x50DE      	MOVF        POSTINC2, 0 
0x0E58	0x2402      	ADDWF       R2, 0 
0x0E5A	0x6E00      	MOVWF       R0 
0x0E5C	0x0E00      	MOVLW       0
0x0E5E	0x2003      	ADDWFC      R3, 0 
0x0E60	0x6E01      	MOVWF       R1 
0x0E62	0x5000      	MOVF        R0, 0 
0x0E64	0x2751      	ADDWF       getAverageCapture_sum_L0, 1, 1
0x0E66	0x5001      	MOVF        R1, 0 
0x0E68	0x2352      	ADDWFC      getAverageCapture_sum_L0+1, 1, 1
0x0E6A	0x0E00      	MOVLW       0
0x0E6C	0x2353      	ADDWFC      getAverageCapture_sum_L0+2, 1, 1
0x0E6E	0x2354      	ADDWFC      getAverageCapture_sum_L0+3, 1, 1
;frequencycounter.c,138 :: 		for(i=0; i<2*pulsesToCapture; i+=2){
0x0E70	0x0E02      	MOVLW       2
0x0E72	0x2605      	ADDWF       R5, 1 
;frequencycounter.c,140 :: 		}
0x0E74	0xD7D4      	BRA         L_getAverageCapture4
L_getAverageCapture5:
;frequencycounter.c,141 :: 		return sum >> 4;
0x0E76	0x0E04      	MOVLW       4
0x0E78	0x6E04      	MOVWF       R4 
0x0E7A	0xF000C251  	MOVFF       getAverageCapture_sum_L0, R0
0x0E7E	0xF001C252  	MOVFF       getAverageCapture_sum_L0+1, R1
0x0E82	0xF002C253  	MOVFF       getAverageCapture_sum_L0+2, R2
0x0E86	0xF003C254  	MOVFF       getAverageCapture_sum_L0+3, R3
0x0E8A	0x5004      	MOVF        R4, 0 
L__getAverageCapture14:
0x0E8C	0xE007      	BZ          L__getAverageCapture15
0x0E8E	0x3203      	RRCF        R3, 1 
0x0E90	0x3202      	RRCF        R2, 1 
0x0E92	0x3201      	RRCF        R1, 1 
0x0E94	0x3200      	RRCF        R0, 1 
0x0E96	0x9E03      	BCF         R3, 7 
0x0E98	0x0FFF      	ADDLW       255
0x0E9A	0xD7F8      	BRA         L__getAverageCapture14
L__getAverageCapture15:
;frequencycounter.c,142 :: 		}
L_end_getAverageCapture:
0x0E9C	0x0012      	RETURN      0
; end of _getAverageCapture
_startCapture:
;frequencycounter.c,110 :: 		void startCapture(){
;frequencycounter.c,111 :: 		pCaptures = &captures ;              // resetting overwrites previous captures
0x0E9E	0x0E81      	MOVLW       _captures
0x0EA0	0x0100      	MOVLB       0
0x0EA2	0x6F7F      	MOVWF       _pCaptures, 1
0x0EA4	0x0E00      	MOVLW       hi_addr(_captures)
0x0EA6	0x6F80      	MOVWF       _pCaptures+1, 1
;frequencycounter.c,112 :: 		pulsesCaptured = 0;
0x0EA8	0x6A48      	CLRF        _pulsesCaptured 
;frequencycounter.c,113 :: 		CCP1CON = 0b00000101 ;               // Start capture, capture on every rising edge
0x0EAA	0x0E05      	MOVLW       5
0x0EAC	0x6EBD      	MOVWF       CCP1CON 
;frequencycounter.c,114 :: 		}
L_end_startCapture:
0x0EAE	0x0012      	RETURN      0
; end of _startCapture
_calculateFrequency:
;frequencycounter.c,118 :: 		unsigned int calculateFrequency(unsigned int timer){
;frequencycounter.c,122 :: 		unsigned long timerAsLong = timer;
0x0EB0	0xF253C251  	MOVFF       FARG_calculateFrequency_timer, calculateFrequency_timerAsLong_L0
0x0EB4	0xF254C252  	MOVFF       FARG_calculateFrequency_timer+1, calculateFrequency_timerAsLong_L0+1
0x0EB8	0x0E00      	MOVLW       0
0x0EBA	0x0102      	MOVLB       2
0x0EBC	0x6F55      	MOVWF       calculateFrequency_timerAsLong_L0+2, 1
0x0EBE	0x6F56      	MOVWF       calculateFrequency_timerAsLong_L0+3, 1
;frequencycounter.c,131 :: 		clockCycles = timerAsLong * clockCyclesPerTimerClick + interruptDelayClockCycles;
0x0EC0	0xF000C253  	MOVFF       calculateFrequency_timerAsLong_L0, R0
0x0EC4	0xF001C254  	MOVFF       calculateFrequency_timerAsLong_L0+1, R1
0x0EC8	0xF002C255  	MOVFF       calculateFrequency_timerAsLong_L0+2, R2
0x0ECC	0xF003C256  	MOVFF       calculateFrequency_timerAsLong_L0+3, R3
0x0ED0	0xF004C053  	MOVFF       _clockCyclesPerTimerClick, R4
0x0ED4	0x0E00      	MOVLW       0
0x0ED6	0x6E05      	MOVWF       R5 
0x0ED8	0x6E06      	MOVWF       R6 
0x0EDA	0x6E07      	MOVWF       R7 
0x0EDC	0xDCFF      	RCALL       _Mul_32x32_U
0x0EDE	0x5052      	MOVF        _interruptDelayClockCycles, 0 
0x0EE0	0x2400      	ADDWF       R0, 0 
0x0EE2	0x6E04      	MOVWF       R4 
0x0EE4	0x0E00      	MOVLW       0
0x0EE6	0x2001      	ADDWFC      R1, 0 
0x0EE8	0x6E05      	MOVWF       R5 
0x0EEA	0x0E00      	MOVLW       0
0x0EEC	0x2002      	ADDWFC      R2, 0 
0x0EEE	0x6E06      	MOVWF       R6 
0x0EF0	0x0E00      	MOVLW       0
0x0EF2	0x2003      	ADDWFC      R3, 0 
0x0EF4	0x6E07      	MOVWF       R7 
;frequencycounter.c,132 :: 		return clockCyclesPerSecondTimesFactor / clockCycles;
0x0EF6	0xF000C04E  	MOVFF       _clockCyclesPerSecondTimesFactor, R0
0x0EFA	0xF001C04F  	MOVFF       _clockCyclesPerSecondTimesFactor+1, R1
0x0EFE	0xF002C050  	MOVFF       _clockCyclesPerSecondTimesFactor+2, R2
0x0F02	0xF003C051  	MOVFF       _clockCyclesPerSecondTimesFactor+3, R3
0x0F06	0xF001EC01  	CALL        _Div_32x32_U, 0
;frequencycounter.c,133 :: 		}
L_end_calculateFrequency:
0x0F0A	0x0012      	RETURN      0
; end of _calculateFrequency
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0F0C	0x9693      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x0F0E	0x9493      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x0F10	0x9893      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x0F12	0x9A93      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x0F14	0x9C93      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x0F16	0x9E93      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x0F18	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x0F1A	0x9481      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x0F1C	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x0F1E	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x0F20	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x0F22	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x0F24	0xF000EC21  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,101 :: 		
0x0F28	0xF000EC21  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,102 :: 		
0x0F2C	0xF000EC21  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,105 :: 		
0x0F30	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x0F32	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x0F34	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x0F36	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,109 :: 		
0x0F3A	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x0F3C	0xF000EC21  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,112 :: 		
0x0F40	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x0F42	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,114 :: 		
0x0F46	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x0F48	0xF000EC21  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,117 :: 		
0x0F4C	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x0F4E	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,119 :: 		
0x0F52	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x0F54	0xF000EC21  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,123 :: 		
0x0F58	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x0F5A	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x0F5C	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,126 :: 		
0x0F60	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x0F62	0xF000EC21  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,130 :: 		
0x0F66	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x0F68	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,132 :: 		
0x0F6C	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x0F6E	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x0F70	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x0F72	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x0F74	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,138 :: 		
0x0F78	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x0F7A	0xF000EC21  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,142 :: 		
0x0F7E	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x0F80	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x0F82	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x0F84	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,146 :: 		
0x0F88	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x0F8A	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x0F8C	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x0F8E	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,151 :: 		
0x0F92	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x0F94	0xF000EC21  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,155 :: 		
0x0F98	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x0F9A	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,157 :: 		
0x0F9E	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x0FA0	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x0FA2	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x0FA4	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,162 :: 		
0x0FA8	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x0FAA	0xF000EC21  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,166 :: 		
0x0FAE	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x0FB0	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x0FB2	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,169 :: 		
0x0FB6	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x0FB8	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x0FBA	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x0FBC	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x0FBE	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x0FC0	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x0FC2	0xF000EC2C  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,177 :: 		
0x0FC6	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x0FC8	0xF000EC21  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,181 :: 		
0x0FCC	0x0100      	MOVLB       0
0x0FCE	0x817E      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0FD0	0x0012      	RETURN      0
; end of _Lcd_Init
_main:
0x0FD2	0xF008EC5A  	CALL        4276, 0
;frequencycounter.c,83 :: 		void main(){
;frequencycounter.c,87 :: 		hardwareInit() ;
0x0FD6	0xDCBD      	RCALL       _hardwareInit
;frequencycounter.c,88 :: 		initPitchArray();
0x0FD8	0xDD06      	RCALL       _initPitchArray
;frequencycounter.c,89 :: 		frequencyCalculatorInit(10);
0x0FDA	0x0E0A      	MOVLW       10
0x0FDC	0x6F51      	MOVWF       FARG_frequencyCalculatorInit_factor, 1
0x0FDE	0xDCCA      	RCALL       _frequencyCalculatorInit
;frequencycounter.c,90 :: 		Lcd_Init();
0x0FE0	0xDF95      	RCALL       _Lcd_Init
;frequencycounter.c,91 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0FE2	0x0E01      	MOVLW       1
0x0FE4	0x0102      	MOVLB       2
0x0FE6	0x6F78      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0FE8	0xF000EC37  	CALL        _Lcd_Cmd, 0
;frequencycounter.c,92 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x0FEC	0x0E0C      	MOVLW       12
0x0FEE	0x0102      	MOVLB       2
0x0FF0	0x6F78      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0FF2	0xF000EC37  	CALL        _Lcd_Cmd, 0
;frequencycounter.c,93 :: 		Lcd_Out(1,1,txt1);
0x0FF6	0x0E01      	MOVLW       1
0x0FF8	0x0102      	MOVLB       2
0x0FFA	0x6F72      	MOVWF       FARG_Lcd_Out_row, 1
0x0FFC	0x0E01      	MOVLW       1
0x0FFE	0x6F73      	MOVWF       FARG_Lcd_Out_column, 1
0x1000	0x0E18      	MOVLW       _txt1
0x1002	0x6F74      	MOVWF       FARG_Lcd_Out_text, 1
0x1004	0x0E00      	MOVLW       hi_addr(_txt1)
0x1006	0x6F75      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1008	0xF000EC80  	CALL        _Lcd_Out, 0
;frequencycounter.c,94 :: 		Lcd_Out(2,1,txt2);
0x100C	0x0E02      	MOVLW       2
0x100E	0x0102      	MOVLB       2
0x1010	0x6F72      	MOVWF       FARG_Lcd_Out_row, 1
0x1012	0x0E01      	MOVLW       1
0x1014	0x6F73      	MOVWF       FARG_Lcd_Out_column, 1
0x1016	0x0E29      	MOVLW       _txt2
0x1018	0x6F74      	MOVWF       FARG_Lcd_Out_text, 1
0x101A	0x0E00      	MOVLW       hi_addr(_txt2)
0x101C	0x6F75      	MOVWF       FARG_Lcd_Out_text+1, 1
0x101E	0xF000EC80  	CALL        _Lcd_Out, 0
;frequencycounter.c,96 :: 		startCapture();                    // first capture
0x1022	0xDF3D      	RCALL       _startCapture
;frequencycounter.c,97 :: 		do {
L_main0:
;frequencycounter.c,99 :: 		if(pulsesCaptured > pulsesToCapture){
0x1024	0x5048      	MOVF        _pulsesCaptured, 0 
0x1026	0x0810      	SUBLW       16
0x1028	0xE210      	BC          L_main3
;frequencycounter.c,100 :: 		average = getAverageCapture();
0x102A	0xDEF3      	RCALL       _getAverageCapture
;frequencycounter.c,101 :: 		frequency = calculateFrequency(average);
0x102C	0xF251C000  	MOVFF       R0, FARG_calculateFrequency_timer
0x1030	0xF252C001  	MOVFF       R1, FARG_calculateFrequency_timer+1
0x1034	0xDF3D      	RCALL       _calculateFrequency
;frequencycounter.c,102 :: 		printNote(frequency, 10);
0x1036	0xF251C000  	MOVFF       R0, FARG_printNote_frequency
0x103A	0xF252C001  	MOVFF       R1, FARG_printNote_frequency+1
0x103E	0x0E0A      	MOVLW       10
0x1040	0x6F53      	MOVWF       FARG_printNote_factor, 1
0x1042	0x0E00      	MOVLW       0
0x1044	0x6F54      	MOVWF       FARG_printNote_factor+1, 1
0x1046	0xDDA8      	RCALL       _printNote
;frequencycounter.c,103 :: 		startCapture();
0x1048	0xDF2A      	RCALL       _startCapture
;frequencycounter.c,104 :: 		}
L_main3:
;frequencycounter.c,105 :: 		} while (1);
0x104A	0xD7EC      	BRA         L_main0
;frequencycounter.c,106 :: 		}
L_end_main:
0x104C	0xD7FF      	BRA         $+0
; end of _main
0x10B4	0xF018EE10  	LFSR        1, 24
0x10B8	0x0E66      	MOVLW       102
0x10BA	0x6E00      	MOVWF       R0 
0x10BC	0x0E01      	MOVLW       1
0x10BE	0x6E01      	MOVWF       R1 
0x10C0	0x0E4E      	MOVLW       78
0x10C2	0x6EF6      	MOVWF       4086 
0x10C4	0x0E10      	MOVLW       16
0x10C6	0x6EF7      	MOVWF       TBLPTRH 
0x10C8	0x0E00      	MOVLW       0
0x10CA	0x6EF8      	MOVWF       TBLPTRU 
0x10CC	0xF004ECA1  	CALL        2370, 0
0x10D0	0x0012      	RETURN      0
;frequencycounter.c,0 :: ?ICS_txt1
0x104E	0x6F4E ;?ICS_txt1+0
0x1050	0x6574 ;?ICS_txt1+2
0x1052	0x203A ;?ICS_txt1+4
0x1054	0x2020 ;?ICS_txt1+6
0x1056	0x2020 ;?ICS_txt1+8
0x1058	0x2020 ;?ICS_txt1+10
0x105A	0x2020 ;?ICS_txt1+12
0x105C	0x2020 ;?ICS_txt1+14
0x105E	0x00 ;?ICS_txt1+16
; end of ?ICS_txt1
;frequencycounter.c,0 :: ?ICS_txt2
0x105F	0x2020 ;?ICS_txt2+0
0x1061	0x2020 ;?ICS_txt2+2
0x1063	0x2020 ;?ICS_txt2+4
0x1065	0x2F20 ;?ICS_txt2+6
0x1067	0x2020 ;?ICS_txt2+8
0x1069	0x2020 ;?ICS_txt2+10
0x106B	0x2020 ;?ICS_txt2+12
0x106D	0x2020 ;?ICS_txt2+14
0x106F	0x00 ;?ICS_txt2+16
; end of ?ICS_txt2
;frequencyToNoteConverter.c,0 :: ?ICS?lstr12_frequencyToNoteConverter
0x1070	0x422D ;?ICS?lstr12_frequencyToNoteConverter+0
0x1072	0x0020 ;?ICS?lstr12_frequencyToNoteConverter+2
; end of ?ICS?lstr12_frequencyToNoteConverter
;frequencyToNoteConverter.c,0 :: ?ICS?lstr6_frequencyToNoteConverter
0x1074	0x462D ;?ICS?lstr6_frequencyToNoteConverter+0
0x1076	0x2020 ;?ICS?lstr6_frequencyToNoteConverter+2
0x1078	0x00 ;?ICS?lstr6_frequencyToNoteConverter+4
; end of ?ICS?lstr6_frequencyToNoteConverter
;frequencyToNoteConverter.c,0 :: ?ICS?lstr5_frequencyToNoteConverter
0x1079	0x452D ;?ICS?lstr5_frequencyToNoteConverter+0
0x107B	0x2020 ;?ICS?lstr5_frequencyToNoteConverter+2
0x107D	0x00 ;?ICS?lstr5_frequencyToNoteConverter+4
; end of ?ICS?lstr5_frequencyToNoteConverter
;frequencycounter.c,0 :: ?ICS_pulsesCaptured
0x107E	0x00 ;?ICS_pulsesCaptured+0
; end of ?ICS_pulsesCaptured
;frequencyToNoteConverter.c,0 :: ?ICS?lstr11_frequencyToNoteConverter
0x107F	0x412D ;?ICS?lstr11_frequencyToNoteConverter+0
0x1081	0x2023 ;?ICS?lstr11_frequencyToNoteConverter+2
0x1083	0x00 ;?ICS?lstr11_frequencyToNoteConverter+4
; end of ?ICS?lstr11_frequencyToNoteConverter
;frequencycounter.c,0 :: ?ICS_clockCyclesPerSecondTimesFactor
0x1084	0x0000 ;?ICS_clockCyclesPerSecondTimesFactor+0
0x1086	0x0000 ;?ICS_clockCyclesPerSecondTimesFactor+2
; end of ?ICS_clockCyclesPerSecondTimesFactor
;frequencycounter.c,0 :: ?ICS_interruptDelayClockCycles
0x1088	0x00 ;?ICS_interruptDelayClockCycles+0
; end of ?ICS_interruptDelayClockCycles
;frequencycounter.c,0 :: ?ICS_clockCyclesPerTimerClick
0x1089	0x00 ;?ICS_clockCyclesPerTimerClick+0
; end of ?ICS_clockCyclesPerTimerClick
;frequencyToNoteConverter.c,0 :: ?ICS?lstr9_frequencyToNoteConverter
0x108A	0x472D ;?ICS?lstr9_frequencyToNoteConverter+0
0x108C	0x2023 ;?ICS?lstr9_frequencyToNoteConverter+2
0x108E	0x00 ;?ICS?lstr9_frequencyToNoteConverter+4
; end of ?ICS?lstr9_frequencyToNoteConverter
;frequencyToNoteConverter.c,0 :: ?ICS?lstr10_frequencyToNoteConverter
0x108F	0x412D ;?ICS?lstr10_frequencyToNoteConverter+0
0x1091	0x2020 ;?ICS?lstr10_frequencyToNoteConverter+2
0x1093	0x00 ;?ICS?lstr10_frequencyToNoteConverter+4
; end of ?ICS?lstr10_frequencyToNoteConverter
;frequencyToNoteConverter.c,0 :: ?ICS?lstr7_frequencyToNoteConverter
0x1094	0x462D ;?ICS?lstr7_frequencyToNoteConverter+0
0x1096	0x2023 ;?ICS?lstr7_frequencyToNoteConverter+2
0x1098	0x00 ;?ICS?lstr7_frequencyToNoteConverter+4
; end of ?ICS?lstr7_frequencyToNoteConverter
;frequencyToNoteConverter.c,0 :: ?ICS?lstr8_frequencyToNoteConverter
0x1099	0x472D ;?ICS?lstr8_frequencyToNoteConverter+0
0x109B	0x2020 ;?ICS?lstr8_frequencyToNoteConverter+2
0x109D	0x00 ;?ICS?lstr8_frequencyToNoteConverter+4
; end of ?ICS?lstr8_frequencyToNoteConverter
;frequencyToNoteConverter.c,0 :: ?ICS?lstr2_frequencyToNoteConverter
0x109E	0x432D ;?ICS?lstr2_frequencyToNoteConverter+0
0x10A0	0x2023 ;?ICS?lstr2_frequencyToNoteConverter+2
0x10A2	0x00 ;?ICS?lstr2_frequencyToNoteConverter+4
; end of ?ICS?lstr2_frequencyToNoteConverter
;frequencyToNoteConverter.c,0 :: ?ICS?lstr1_frequencyToNoteConverter
0x10A3	0x432D ;?ICS?lstr1_frequencyToNoteConverter+0
0x10A5	0x2020 ;?ICS?lstr1_frequencyToNoteConverter+2
0x10A7	0x00 ;?ICS?lstr1_frequencyToNoteConverter+4
; end of ?ICS?lstr1_frequencyToNoteConverter
;frequencyToNoteConverter.c,0 :: ?ICS?lstr4_frequencyToNoteConverter
0x10A8	0x442D ;?ICS?lstr4_frequencyToNoteConverter+0
0x10AA	0x2023 ;?ICS?lstr4_frequencyToNoteConverter+2
0x10AC	0x00 ;?ICS?lstr4_frequencyToNoteConverter+4
; end of ?ICS?lstr4_frequencyToNoteConverter
;frequencyToNoteConverter.c,0 :: ?ICS?lstr3_frequencyToNoteConverter
0x10AD	0x442D ;?ICS?lstr3_frequencyToNoteConverter+0
0x10AF	0x2020 ;?ICS?lstr3_frequencyToNoteConverter+2
0x10B1	0x00 ;?ICS?lstr3_frequencyToNoteConverter+4
; end of ?ICS?lstr3_frequencyToNoteConverter
;frequencycounter.c,0 :: ?ICS_capturedData
0x10B2	0x0000 ;?ICS_capturedData+0
; end of ?ICS_capturedData
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [58]    _interrupt
0x0042      [22]    _Delay_5500us
0x0058      [12]    _Delay_1us
0x0064      [10]    _Delay_50us
0x006E     [132]    _Lcd_Cmd
0x00F2      [14]    _Lcd_Chr_CP
0x0100     [132]    _Lcd_Out
0x0184      [96]    _Lcd_Chr
0x01E4      [30]    _Div_8x8_U
0x0202     [748]    _Div_32x32_U
0x04EE      [40]    _printTone
0x0516      [12]    _getOctave
0x0522     [540]    _Lcd_Out_Freq
0x073E     [294]    _lookupAndPrintTone
0x0864      [16]    _getSemitoneInOctave
0x0874      [24]    _Mul_8x8_S
0x088C      [80]    _Mul_16x16_U
0x08DC      [82]    _Mul_32x32_U
0x092E      [20]    _Delay_5ms
0x0942      [16]    ___CC2DW
0x0952      [34]    _hardwareInit
0x0974      [56]    _frequencyCalculatorInit
0x09AC      [58]    _storeInput
0x09E6     [434]    _initPitchArray
0x0B98     [634]    _printNote
0x0E12     [140]    _getAverageCapture
0x0E9E      [18]    _startCapture
0x0EB0      [92]    _calculateFrequency
0x0F0C     [198]    _Lcd_Init
0x0FD2     [124]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    R0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    R1
0x0001       [1]    I2C1_Rd_tmp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memcpy_dd_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    __Lib_CAN_C_A_CANIDToRegs_loVal_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    frexp_pom_L0
0x0004       [1]    __Lib_CAN_C_A_CANIDToRegs_hiVal_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    R4
0x0004       [2]    strcat_cp_L0
0x0005       [1]    __Lib_CAN_C_A_CANIDToRegs_hrVal_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    R5
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    getAverageCapture_i_L0
0x0006       [1]    __Lib_CAN_C_A_CANIDToRegs_hsVal_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0018      [17]    _txt1
0x0029      [17]    _txt2
0x003A       [4]    ?lstr12_frequencyToNoteConverter
0x003E       [5]    ?lstr6_frequencyToNoteConverter
0x0043       [5]    ?lstr5_frequencyToNoteConverter
0x0048       [1]    _pulsesCaptured
0x0049       [5]    ?lstr11_frequencyToNoteConverter
0x004E       [4]    _clockCyclesPerSecondTimesFactor
0x0052       [1]    _interruptDelayClockCycles
0x0053       [1]    _clockCyclesPerTimerClick
0x0054       [5]    ?lstr9_frequencyToNoteConverter
0x0059       [5]    ?lstr10_frequencyToNoteConverter
0x005E       [5]    ?lstr7_frequencyToNoteConverter
0x0063       [5]    ?lstr8_frequencyToNoteConverter
0x0068       [5]    ?lstr2_frequencyToNoteConverter
0x006D       [5]    ?lstr1_frequencyToNoteConverter
0x0072       [5]    ?lstr4_frequencyToNoteConverter
0x0077       [5]    ?lstr3_frequencyToNoteConverter
0x007C       [2]    _capturedData
0x007E       [0]    __Lib_Lcd_cmd_status
0x007F       [2]    _pCaptures
0x0081      [32]    _captures
0x00A1     [432]    _pitches
0x0251       [2]    FARG_calculateFrequency_timer
0x0251       [4]    getAverageCapture_sum_L0
0x0251       [1]    FARG_frequencyCalculatorInit_factor
0x0251       [1]    initPitchArray_octave_L0
0x0251       [2]    FARG_printNote_frequency
0x0252       [1]    initPitchArray_semitone_L0
0x0253       [4]    calculateFrequency_timerAsLong_L0
0x0253       [2]    FARG_printNote_factor
0x0253       [1]    initPitchArray_divideBy_L0
0x0254       [2]    FLOC__initPitchArray
0x0255       [4]    printNote_frequency100_L0
0x0259       [1]    printNote_semitone_L0
0x025A       [1]    printNote_closestMatch_L0
0x025B       [1]    printNote_octave_L0
0x025C       [2]    printNote_mismatch_L0
0x025E       [1]    printNote_lowerBound_L0
0x025F       [1]    printNote_upperBound_L0
0x0260       [4]    FLOC__printNote
0x0264       [1]    FARG_Lcd_Out_Freq_row
0x0264       [1]    FARG_getOctave_semitone
0x0264       [1]    FARG_getSemitoneInOctave_semitone
0x0264       [1]    FARG_lookupAndPrintTone_octave
0x0265       [1]    FARG_Lcd_Out_Freq_col
0x0265       [1]    FARG_lookupAndPrintTone_semitone
0x0266       [4]    FARG_Lcd_Out_Freq_number
0x0266       [2]    FARG_lookupAndPrintTone_mismatch
0x026A       [5]    Lcd_Out_Freq_digits_L0
0x026F       [2]    FARG_printTone_note
0x0271       [1]    FARG_printTone_octave
0x0272       [1]    FARG_Lcd_Out_row
0x0272       [1]    FARG_Lcd_Chr_row
0x0273       [1]    FARG_Lcd_Chr_column
0x0273       [1]    FARG_Lcd_Out_column
0x0274       [2]    FARG_Lcd_Out_text
0x0274       [1]    FARG_Lcd_Chr_out_char
0x0276       [1]    Lcd_Out_i_L0
0x0277       [1]    FARG_Lcd_Chr_CP_out_char
0x0278       [1]    FARG_Lcd_Cmd_out_char
0x0F80       [1]    PORTA
0x0F81       [0]    RB4_bit
0x0F81       [0]    LCD_D7
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    LCD_D6
0x0F81       [0]    LCD_RS
0x0F81       [0]    LCD_EN
0x0F81       [0]    RB2_bit
0x0F81       [0]    LCD_D4
0x0F81       [0]    LCD_D5
0x0F81       [0]    RB3_bit
0x0F82       [1]    PORTC
0x0F92       [1]    TRISA
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    LCD_RS_Direction
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    TRISB7_bit
0x0F94       [1]    TRISC
0x0F9D       [1]    PIE1
0x0F9E       [1]    PIR1
0x0FBD       [1]    CCP1CON
0x0FBE       [1]    CCPR1L
0x0FBF       [1]    CCPR1H
0x0FC1       [1]    ADCON1
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x104E      [17]    ?ICS_txt1
0x105F      [17]    ?ICS_txt2
0x1070       [4]    ?ICS?lstr12_frequencyToNoteConverter
0x1074       [5]    ?ICS?lstr6_frequencyToNoteConverter
0x1079       [5]    ?ICS?lstr5_frequencyToNoteConverter
0x107E       [1]    ?ICS_pulsesCaptured
0x107F       [5]    ?ICS?lstr11_frequencyToNoteConverter
0x1084       [4]    ?ICS_clockCyclesPerSecondTimesFactor
0x1088       [1]    ?ICS_interruptDelayClockCycles
0x1089       [1]    ?ICS_clockCyclesPerTimerClick
0x108A       [5]    ?ICS?lstr9_frequencyToNoteConverter
0x108F       [5]    ?ICS?lstr10_frequencyToNoteConverter
0x1094       [5]    ?ICS?lstr7_frequencyToNoteConverter
0x1099       [5]    ?ICS?lstr8_frequencyToNoteConverter
0x109E       [5]    ?ICS?lstr2_frequencyToNoteConverter
0x10A3       [5]    ?ICS?lstr1_frequencyToNoteConverter
0x10A8       [5]    ?ICS?lstr4_frequencyToNoteConverter
0x10AD       [5]    ?ICS?lstr3_frequencyToNoteConverter
0x10B2       [2]    ?ICS_capturedData
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_getAverageCapture4
  L_getAverageCapture5
  L_getAverageCapture6
  L_interrupt7
  L_storeInput8
  L_storeInput9
  L_end_main
  _main
  L_end_startCapture
  _startCapture
  L_end_calculateFrequency
  _calculateFrequency
  L_end_getAverageCapture
  _getAverageCapture
  L__getAverageCapture14
  L__getAverageCapture15
  L_end_hardwareInit
  _hardwareInit
  L_end_frequencyCalculatorInit
  _frequencyCalculatorInit
  L_end_interrupt
  _interrupt
  L__interrupt19
  L_end_storeInput
  _storeInput
  L_initPitchArray0
  L_initPitchArray1
  L_initPitchArray2
  L_initPitchArray3
  L_initPitchArray4
  L_initPitchArray5
  L_printNote6
  L_printNote7
  L_printNote8
  L_printNote9
  L_printNote10
  L_printNote11
  L_printNote12
  L_printNote13
  L_printNote14
  L_lookupAndPrintTone15
  L_lookupAndPrintTone16
  L_lookupAndPrintTone17
  L_lookupAndPrintTone18
  L_lookupAndPrintTone19
  L_lookupAndPrintTone20
  L_lookupAndPrintTone21
  L_lookupAndPrintTone22
  L_lookupAndPrintTone23
  L_lookupAndPrintTone24
  L_lookupAndPrintTone25
  L_lookupAndPrintTone26
  L_lookupAndPrintTone27
  L_lookupAndPrintTone28
  L_printMismatch29
  L_printMismatch30
  L_printMismatch31
  L_printMismatch32
  L_printMismatch33
  L_printMismatch34
  L_printMismatch35
  L_printMismatch36
  L_getNumberOfSymbols37
  L_getNumberOfSymbols38
  L_getNumberOfSymbols39
  L_getNumberOfSymbols40
  L_getNumberOfSymbols41
  L_end_initPitchArray
  _initPitchArray
  L_end_printNote
  _printNote
  L__printNote44
  L__printNote45
  L__printNote46
  L_end_getOctave
  _getOctave
  L_end_getSemitoneInOctave
  _getSemitoneInOctave
  L_end_lookupAndPrintTone
  _lookupAndPrintTone
  L_end_printTone
  _printTone
  L_end_printMismatch
  _printMismatch
  L__printMismatch52
  L_end_getNumberOfSymbols
  _getNumberOfSymbols
  L__getNumberOfSymbols54
  L__getNumberOfSymbols55
  L__getNumberOfSymbols56
  L_Lcd_Out_Freq0
  L_Lcd_Out_Freq1
  L_end_Lcd_Out_ULong
  _Lcd_Out_ULong
  L_end_Lcd_Out_UInt
  _Lcd_Out_UInt
  L_end_Lcd_Out_UShort
  _Lcd_Out_UShort
  L_end_Lcd_Out_Timer
  _Lcd_Out_Timer
  L_end_Lcd_Out_Freq
  _Lcd_Out_Freq
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_100ms9
  L_Delay_10ms10
  L_Delay_1sec11
  L____Boot_Delay4k12
  L____Boot_Delay8k13
  L____Boot_Delay12k14
  L____Boot_Delay16k15
  L____Boot_Delay24k16
  L____Boot_Delay32k17
  L____Boot_Delay48k18
  L____Boot_Delay64k19
  L____Boot_Delay128k20
  L_Delay_Cyc21
  L_Delay_Cyc22
  L_VDelay_ms23
  L_VDelay_ms24
  L_VDelay_ms25
  L_VDelay_Advanced_ms26
  L_VDelay_Advanced_ms27
  L_VDelay_Advanced_ms28
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end____Boot_Delay4k
  ____Boot_Delay4k
  L_end____Boot_Delay8k
  ____Boot_Delay8k
  L_end____Boot_Delay12k
  ____Boot_Delay12k
  L_end____Boot_Delay16k
  ____Boot_Delay16k
  L_end____Boot_Delay24k
  ____Boot_Delay24k
  L_end____Boot_Delay32k
  ____Boot_Delay32k
  L_end____Boot_Delay48k
  ____Boot_Delay48k
  L_end____Boot_Delay64k
  ____Boot_Delay64k
  L_end____Boot_Delay128k
  ____Boot_Delay128k
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms54
  L__VDelay_ms55
  L__VDelay_ms56
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms58
  L__VDelay_Advanced_ms59
  L__VDelay_Advanced_ms60
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  L_end_Lcd_Cmd
  _Lcd_Cmd
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  L__Lcd_Cmd40
  L_end_Lcd_Chr_CP
  _Lcd_Chr_CP
  L_end_Lcd_Out_CP
  _Lcd_Out_CP
  L_end_Lcd_Chr
  _Lcd_Chr
  L_end_Lcd_Init
  _Lcd_Init
  L_end_Lcd_Out
  _Lcd_Out
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_main0
  L_main1
  L_main2
  L_main3
  L_getAverageCapture4
  L_getAverageCapture5
  L_getAverageCapture6
  L_interrupt7
  L_storeInput8
  L_storeInput9
  L_end_main
  _main
  L_end_startCapture
  _startCapture
  L_end_calculateFrequency
  _calculateFrequency
  L_end_getAverageCapture
  _getAverageCapture
  L__getAverageCapture14
  L__getAverageCapture15
  L_end_hardwareInit
  _hardwareInit
  L_end_frequencyCalculatorInit
  _frequencyCalculatorInit
  L_end_interrupt
  _interrupt
  L__interrupt19
  L_end_storeInput
  _storeInput
